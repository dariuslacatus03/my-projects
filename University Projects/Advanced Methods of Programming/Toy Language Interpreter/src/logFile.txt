
-------------------------------------
ProgramState ID 10:
executionStack = [Ref int a;, (Ref int b;
(int v;
(new(a, 0);
(new(b, 0);
(writeHeap(a, 1);
(writeHeap(b, 2);
(v = readHeap(a) < readHeap(b)?100:200
(print(v);
(v = readHeap(b) - 2 > readHeap(a)?100:200
print(v);)))))))))]
symbolTable = {}
outputList = []
fileTable = {}
heapTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 10:
executionStack = [(Ref int b;
(int v;
(new(a, 0);
(new(b, 0);
(writeHeap(a, 1);
(writeHeap(b, 2);
(v = readHeap(a) < readHeap(b)?100:200
(print(v);
(v = readHeap(b) - 2 > readHeap(a)?100:200
print(v);)))))))))]
symbolTable = {a=(Address: 0)=>int}
outputList = []
fileTable = {}
heapTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 10:
executionStack = [Ref int b;, (int v;
(new(a, 0);
(new(b, 0);
(writeHeap(a, 1);
(writeHeap(b, 2);
(v = readHeap(a) < readHeap(b)?100:200
(print(v);
(v = readHeap(b) - 2 > readHeap(a)?100:200
print(v);))))))))]
symbolTable = {a=(Address: 0)=>int}
outputList = []
fileTable = {}
heapTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 10:
executionStack = [(int v;
(new(a, 0);
(new(b, 0);
(writeHeap(a, 1);
(writeHeap(b, 2);
(v = readHeap(a) < readHeap(b)?100:200
(print(v);
(v = readHeap(b) - 2 > readHeap(a)?100:200
print(v);))))))))]
symbolTable = {a=(Address: 0)=>int, b=(Address: 0)=>int}
outputList = []
fileTable = {}
heapTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 10:
executionStack = [int v;, (new(a, 0);
(new(b, 0);
(writeHeap(a, 1);
(writeHeap(b, 2);
(v = readHeap(a) < readHeap(b)?100:200
(print(v);
(v = readHeap(b) - 2 > readHeap(a)?100:200
print(v);)))))))]
symbolTable = {a=(Address: 0)=>int, b=(Address: 0)=>int}
outputList = []
fileTable = {}
heapTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 10:
executionStack = [(new(a, 0);
(new(b, 0);
(writeHeap(a, 1);
(writeHeap(b, 2);
(v = readHeap(a) < readHeap(b)?100:200
(print(v);
(v = readHeap(b) - 2 > readHeap(a)?100:200
print(v);)))))))]
symbolTable = {a=(Address: 0)=>int, b=(Address: 0)=>int, v=0}
outputList = []
fileTable = {}
heapTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 10:
executionStack = [new(a, 0);, (new(b, 0);
(writeHeap(a, 1);
(writeHeap(b, 2);
(v = readHeap(a) < readHeap(b)?100:200
(print(v);
(v = readHeap(b) - 2 > readHeap(a)?100:200
print(v);))))))]
symbolTable = {a=(Address: 0)=>int, b=(Address: 0)=>int, v=0}
outputList = []
fileTable = {}
heapTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 10:
executionStack = [(new(b, 0);
(writeHeap(a, 1);
(writeHeap(b, 2);
(v = readHeap(a) < readHeap(b)?100:200
(print(v);
(v = readHeap(b) - 2 > readHeap(a)?100:200
print(v);))))))]
symbolTable = {a=(Address: 1)=>int, b=(Address: 0)=>int, v=0}
outputList = []
fileTable = {}
heapTable = {1=0}
-------------------------------------




-------------------------------------
ProgramState ID 10:
executionStack = [new(b, 0);, (writeHeap(a, 1);
(writeHeap(b, 2);
(v = readHeap(a) < readHeap(b)?100:200
(print(v);
(v = readHeap(b) - 2 > readHeap(a)?100:200
print(v);)))))]
symbolTable = {a=(Address: 1)=>int, b=(Address: 0)=>int, v=0}
outputList = []
fileTable = {}
heapTable = {1=0}
-------------------------------------




-------------------------------------
ProgramState ID 10:
executionStack = [(writeHeap(a, 1);
(writeHeap(b, 2);
(v = readHeap(a) < readHeap(b)?100:200
(print(v);
(v = readHeap(b) - 2 > readHeap(a)?100:200
print(v);)))))]
symbolTable = {a=(Address: 1)=>int, b=(Address: 2)=>int, v=0}
outputList = []
fileTable = {}
heapTable = {1=0, 2=0}
-------------------------------------




-------------------------------------
ProgramState ID 10:
executionStack = [writeHeap(a, 1);, (writeHeap(b, 2);
(v = readHeap(a) < readHeap(b)?100:200
(print(v);
(v = readHeap(b) - 2 > readHeap(a)?100:200
print(v);))))]
symbolTable = {a=(Address: 1)=>int, b=(Address: 2)=>int, v=0}
outputList = []
fileTable = {}
heapTable = {1=0, 2=0}
-------------------------------------




-------------------------------------
ProgramState ID 10:
executionStack = [(writeHeap(b, 2);
(v = readHeap(a) < readHeap(b)?100:200
(print(v);
(v = readHeap(b) - 2 > readHeap(a)?100:200
print(v);))))]
symbolTable = {a=(Address: 1)=>int, b=(Address: 2)=>int, v=0}
outputList = []
fileTable = {}
heapTable = {1=1, 2=0}
-------------------------------------




-------------------------------------
ProgramState ID 10:
executionStack = [writeHeap(b, 2);, (v = readHeap(a) < readHeap(b)?100:200
(print(v);
(v = readHeap(b) - 2 > readHeap(a)?100:200
print(v);)))]
symbolTable = {a=(Address: 1)=>int, b=(Address: 2)=>int, v=0}
outputList = []
fileTable = {}
heapTable = {1=1, 2=0}
-------------------------------------




-------------------------------------
ProgramState ID 10:
executionStack = [(v = readHeap(a) < readHeap(b)?100:200
(print(v);
(v = readHeap(b) - 2 > readHeap(a)?100:200
print(v);)))]
symbolTable = {a=(Address: 1)=>int, b=(Address: 2)=>int, v=0}
outputList = []
fileTable = {}
heapTable = {1=1, 2=2}
-------------------------------------




-------------------------------------
ProgramState ID 10:
executionStack = [v = readHeap(a) < readHeap(b)?100:200, (print(v);
(v = readHeap(b) - 2 > readHeap(a)?100:200
print(v);))]
symbolTable = {a=(Address: 1)=>int, b=(Address: 2)=>int, v=0}
outputList = []
fileTable = {}
heapTable = {1=1, 2=2}
-------------------------------------




-------------------------------------
ProgramState ID 10:
executionStack = [(print(v);
(v = readHeap(b) - 2 > readHeap(a)?100:200
print(v);))]
symbolTable = {a=(Address: 1)=>int, b=(Address: 2)=>int, v=100}
outputList = []
fileTable = {}
heapTable = {1=1, 2=2}
-------------------------------------




-------------------------------------
ProgramState ID 10:
executionStack = [print(v);, (v = readHeap(b) - 2 > readHeap(a)?100:200
print(v);)]
symbolTable = {a=(Address: 1)=>int, b=(Address: 2)=>int, v=100}
outputList = []
fileTable = {}
heapTable = {1=1, 2=2}
-------------------------------------




-------------------------------------
ProgramState ID 10:
executionStack = [(v = readHeap(b) - 2 > readHeap(a)?100:200
print(v);)]
symbolTable = {a=(Address: 1)=>int, b=(Address: 2)=>int, v=100}
outputList = [100]
fileTable = {}
heapTable = {1=1, 2=2}
-------------------------------------




-------------------------------------
ProgramState ID 10:
executionStack = [v = readHeap(b) - 2 > readHeap(a)?100:200, print(v);]
symbolTable = {a=(Address: 1)=>int, b=(Address: 2)=>int, v=100}
outputList = [100]
fileTable = {}
heapTable = {1=1, 2=2}
-------------------------------------




-------------------------------------
ProgramState ID 10:
executionStack = [print(v);]
symbolTable = {a=(Address: 1)=>int, b=(Address: 2)=>int, v=200}
outputList = [100]
fileTable = {}
heapTable = {1=1, 2=2}
-------------------------------------




-------------------------------------
ProgramState ID 10:
executionStack = []
symbolTable = {a=(Address: 1)=>int, b=(Address: 2)=>int, v=200}
outputList = [100, 200]
fileTable = {}
heapTable = {1=1, 2=2}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [Ref int a;, (Ref int b;
(int v;
(new(a, 0);
(new(b, 0);
(writeHeap(a, 1);
(writeHeap(b, 2);
(v = readHeap(a) < readHeap(b)?100:200
(print(v);
(v = readHeap(b) - 2 > readHeap(a)?100:200
print(v);)))))))))]
symbolTable = {}
outputList = []
fileTable = {}
heapTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [(Ref int b;
(int v;
(new(a, 0);
(new(b, 0);
(writeHeap(a, 1);
(writeHeap(b, 2);
(v = readHeap(a) < readHeap(b)?100:200
(print(v);
(v = readHeap(b) - 2 > readHeap(a)?100:200
print(v);)))))))))]
symbolTable = {a=(Address: 0)=>int}
outputList = []
fileTable = {}
heapTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [Ref int b;, (int v;
(new(a, 0);
(new(b, 0);
(writeHeap(a, 1);
(writeHeap(b, 2);
(v = readHeap(a) < readHeap(b)?100:200
(print(v);
(v = readHeap(b) - 2 > readHeap(a)?100:200
print(v);))))))))]
symbolTable = {a=(Address: 0)=>int}
outputList = []
fileTable = {}
heapTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [(int v;
(new(a, 0);
(new(b, 0);
(writeHeap(a, 1);
(writeHeap(b, 2);
(v = readHeap(a) < readHeap(b)?100:200
(print(v);
(v = readHeap(b) - 2 > readHeap(a)?100:200
print(v);))))))))]
symbolTable = {a=(Address: 0)=>int, b=(Address: 0)=>int}
outputList = []
fileTable = {}
heapTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [int v;, (new(a, 0);
(new(b, 0);
(writeHeap(a, 1);
(writeHeap(b, 2);
(v = readHeap(a) < readHeap(b)?100:200
(print(v);
(v = readHeap(b) - 2 > readHeap(a)?100:200
print(v);)))))))]
symbolTable = {a=(Address: 0)=>int, b=(Address: 0)=>int}
outputList = []
fileTable = {}
heapTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [(new(a, 0);
(new(b, 0);
(writeHeap(a, 1);
(writeHeap(b, 2);
(v = readHeap(a) < readHeap(b)?100:200
(print(v);
(v = readHeap(b) - 2 > readHeap(a)?100:200
print(v);)))))))]
symbolTable = {a=(Address: 0)=>int, b=(Address: 0)=>int, v=0}
outputList = []
fileTable = {}
heapTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [new(a, 0);, (new(b, 0);
(writeHeap(a, 1);
(writeHeap(b, 2);
(v = readHeap(a) < readHeap(b)?100:200
(print(v);
(v = readHeap(b) - 2 > readHeap(a)?100:200
print(v);))))))]
symbolTable = {a=(Address: 0)=>int, b=(Address: 0)=>int, v=0}
outputList = []
fileTable = {}
heapTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [(new(b, 0);
(writeHeap(a, 1);
(writeHeap(b, 2);
(v = readHeap(a) < readHeap(b)?100:200
(print(v);
(v = readHeap(b) - 2 > readHeap(a)?100:200
print(v);))))))]
symbolTable = {a=(Address: 1)=>int, b=(Address: 0)=>int, v=0}
outputList = []
fileTable = {}
heapTable = {1=0}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [new(b, 0);, (writeHeap(a, 1);
(writeHeap(b, 2);
(v = readHeap(a) < readHeap(b)?100:200
(print(v);
(v = readHeap(b) - 2 > readHeap(a)?100:200
print(v);)))))]
symbolTable = {a=(Address: 1)=>int, b=(Address: 0)=>int, v=0}
outputList = []
fileTable = {}
heapTable = {1=0}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [(writeHeap(a, 1);
(writeHeap(b, 2);
(v = readHeap(a) < readHeap(b)?100:200
(print(v);
(v = readHeap(b) - 2 > readHeap(a)?100:200
print(v);)))))]
symbolTable = {a=(Address: 1)=>int, b=(Address: 2)=>int, v=0}
outputList = []
fileTable = {}
heapTable = {1=0, 2=0}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [writeHeap(a, 1);, (writeHeap(b, 2);
(v = readHeap(a) < readHeap(b)?100:200
(print(v);
(v = readHeap(b) - 2 > readHeap(a)?100:200
print(v);))))]
symbolTable = {a=(Address: 1)=>int, b=(Address: 2)=>int, v=0}
outputList = []
fileTable = {}
heapTable = {1=0, 2=0}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [(writeHeap(b, 2);
(v = readHeap(a) < readHeap(b)?100:200
(print(v);
(v = readHeap(b) - 2 > readHeap(a)?100:200
print(v);))))]
symbolTable = {a=(Address: 1)=>int, b=(Address: 2)=>int, v=0}
outputList = []
fileTable = {}
heapTable = {1=1, 2=0}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [writeHeap(b, 2);, (v = readHeap(a) < readHeap(b)?100:200
(print(v);
(v = readHeap(b) - 2 > readHeap(a)?100:200
print(v);)))]
symbolTable = {a=(Address: 1)=>int, b=(Address: 2)=>int, v=0}
outputList = []
fileTable = {}
heapTable = {1=1, 2=0}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [(v = readHeap(a) < readHeap(b)?100:200
(print(v);
(v = readHeap(b) - 2 > readHeap(a)?100:200
print(v);)))]
symbolTable = {a=(Address: 1)=>int, b=(Address: 2)=>int, v=0}
outputList = []
fileTable = {}
heapTable = {1=1, 2=2}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [v = readHeap(a) < readHeap(b)?100:200, (print(v);
(v = readHeap(b) - 2 > readHeap(a)?100:200
print(v);))]
symbolTable = {a=(Address: 1)=>int, b=(Address: 2)=>int, v=0}
outputList = []
fileTable = {}
heapTable = {1=1, 2=2}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [(print(v);
(v = readHeap(b) - 2 > readHeap(a)?100:200
print(v);))]
symbolTable = {a=(Address: 1)=>int, b=(Address: 2)=>int, v=100}
outputList = []
fileTable = {}
heapTable = {1=1, 2=2}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [print(v);, (v = readHeap(b) - 2 > readHeap(a)?100:200
print(v);)]
symbolTable = {a=(Address: 1)=>int, b=(Address: 2)=>int, v=100}
outputList = []
fileTable = {}
heapTable = {1=1, 2=2}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [(v = readHeap(b) - 2 > readHeap(a)?100:200
print(v);)]
symbolTable = {a=(Address: 1)=>int, b=(Address: 2)=>int, v=100}
outputList = [100]
fileTable = {}
heapTable = {1=1, 2=2}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [v = readHeap(b) - 2 > readHeap(a)?100:200, print(v);]
symbolTable = {a=(Address: 1)=>int, b=(Address: 2)=>int, v=100}
outputList = [100]
fileTable = {}
heapTable = {1=1, 2=2}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [print(v);]
symbolTable = {a=(Address: 1)=>int, b=(Address: 2)=>int, v=200}
outputList = [100]
fileTable = {}
heapTable = {1=1, 2=2}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = []
symbolTable = {a=(Address: 1)=>int, b=(Address: 2)=>int, v=200}
outputList = [100, 200]
fileTable = {}
heapTable = {1=1, 2=2}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [Ref int v1;, (Ref int v2;
(Ref int v3;
(int cnt;
(new(v1, 2);
(new(v2, 3);
(new(v3, 4);
(newLatch(cnt, readHeap(v2))
(fork(writeHeap(v1, readHeap(v1) * 10);)endFork
(print(readHeap(v1));
(countDown(cnt)
(fork(writeHeap(v2, readHeap(v2) * 10);)endFork
(print(readHeap(v2));
(countDown(cnt)
(fork(writeHeap(v3, readHeap(v3) * 10);)endFork
(print(readHeap(v3));
(countDown(cnt)
(await(cnt)
(print(100);
(countDown(cnt)
print(100);)))))))))))))))))))]
symbolTable = {}
outputList = []
fileTable = {}
heapTable = {}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [(Ref int v2;
(Ref int v3;
(int cnt;
(new(v1, 2);
(new(v2, 3);
(new(v3, 4);
(newLatch(cnt, readHeap(v2))
(fork(writeHeap(v1, readHeap(v1) * 10);)endFork
(print(readHeap(v1));
(countDown(cnt)
(fork(writeHeap(v2, readHeap(v2) * 10);)endFork
(print(readHeap(v2));
(countDown(cnt)
(fork(writeHeap(v3, readHeap(v3) * 10);)endFork
(print(readHeap(v3));
(countDown(cnt)
(await(cnt)
(print(100);
(countDown(cnt)
print(100);)))))))))))))))))))]
symbolTable = {v1=(Address: 0)=>int}
outputList = []
fileTable = {}
heapTable = {}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [Ref int v2;, (Ref int v3;
(int cnt;
(new(v1, 2);
(new(v2, 3);
(new(v3, 4);
(newLatch(cnt, readHeap(v2))
(fork(writeHeap(v1, readHeap(v1) * 10);)endFork
(print(readHeap(v1));
(countDown(cnt)
(fork(writeHeap(v2, readHeap(v2) * 10);)endFork
(print(readHeap(v2));
(countDown(cnt)
(fork(writeHeap(v3, readHeap(v3) * 10);)endFork
(print(readHeap(v3));
(countDown(cnt)
(await(cnt)
(print(100);
(countDown(cnt)
print(100);))))))))))))))))))]
symbolTable = {v1=(Address: 0)=>int}
outputList = []
fileTable = {}
heapTable = {}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [(Ref int v3;
(int cnt;
(new(v1, 2);
(new(v2, 3);
(new(v3, 4);
(newLatch(cnt, readHeap(v2))
(fork(writeHeap(v1, readHeap(v1) * 10);)endFork
(print(readHeap(v1));
(countDown(cnt)
(fork(writeHeap(v2, readHeap(v2) * 10);)endFork
(print(readHeap(v2));
(countDown(cnt)
(fork(writeHeap(v3, readHeap(v3) * 10);)endFork
(print(readHeap(v3));
(countDown(cnt)
(await(cnt)
(print(100);
(countDown(cnt)
print(100);))))))))))))))))))]
symbolTable = {v1=(Address: 0)=>int, v2=(Address: 0)=>int}
outputList = []
fileTable = {}
heapTable = {}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [Ref int v3;, (int cnt;
(new(v1, 2);
(new(v2, 3);
(new(v3, 4);
(newLatch(cnt, readHeap(v2))
(fork(writeHeap(v1, readHeap(v1) * 10);)endFork
(print(readHeap(v1));
(countDown(cnt)
(fork(writeHeap(v2, readHeap(v2) * 10);)endFork
(print(readHeap(v2));
(countDown(cnt)
(fork(writeHeap(v3, readHeap(v3) * 10);)endFork
(print(readHeap(v3));
(countDown(cnt)
(await(cnt)
(print(100);
(countDown(cnt)
print(100);)))))))))))))))))]
symbolTable = {v1=(Address: 0)=>int, v2=(Address: 0)=>int}
outputList = []
fileTable = {}
heapTable = {}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [(int cnt;
(new(v1, 2);
(new(v2, 3);
(new(v3, 4);
(newLatch(cnt, readHeap(v2))
(fork(writeHeap(v1, readHeap(v1) * 10);)endFork
(print(readHeap(v1));
(countDown(cnt)
(fork(writeHeap(v2, readHeap(v2) * 10);)endFork
(print(readHeap(v2));
(countDown(cnt)
(fork(writeHeap(v3, readHeap(v3) * 10);)endFork
(print(readHeap(v3));
(countDown(cnt)
(await(cnt)
(print(100);
(countDown(cnt)
print(100);)))))))))))))))))]
symbolTable = {v1=(Address: 0)=>int, v2=(Address: 0)=>int, v3=(Address: 0)=>int}
outputList = []
fileTable = {}
heapTable = {}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [int cnt;, (new(v1, 2);
(new(v2, 3);
(new(v3, 4);
(newLatch(cnt, readHeap(v2))
(fork(writeHeap(v1, readHeap(v1) * 10);)endFork
(print(readHeap(v1));
(countDown(cnt)
(fork(writeHeap(v2, readHeap(v2) * 10);)endFork
(print(readHeap(v2));
(countDown(cnt)
(fork(writeHeap(v3, readHeap(v3) * 10);)endFork
(print(readHeap(v3));
(countDown(cnt)
(await(cnt)
(print(100);
(countDown(cnt)
print(100);))))))))))))))))]
symbolTable = {v1=(Address: 0)=>int, v2=(Address: 0)=>int, v3=(Address: 0)=>int}
outputList = []
fileTable = {}
heapTable = {}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [(new(v1, 2);
(new(v2, 3);
(new(v3, 4);
(newLatch(cnt, readHeap(v2))
(fork(writeHeap(v1, readHeap(v1) * 10);)endFork
(print(readHeap(v1));
(countDown(cnt)
(fork(writeHeap(v2, readHeap(v2) * 10);)endFork
(print(readHeap(v2));
(countDown(cnt)
(fork(writeHeap(v3, readHeap(v3) * 10);)endFork
(print(readHeap(v3));
(countDown(cnt)
(await(cnt)
(print(100);
(countDown(cnt)
print(100);))))))))))))))))]
symbolTable = {cnt=0, v1=(Address: 0)=>int, v2=(Address: 0)=>int, v3=(Address: 0)=>int}
outputList = []
fileTable = {}
heapTable = {}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [new(v1, 2);, (new(v2, 3);
(new(v3, 4);
(newLatch(cnt, readHeap(v2))
(fork(writeHeap(v1, readHeap(v1) * 10);)endFork
(print(readHeap(v1));
(countDown(cnt)
(fork(writeHeap(v2, readHeap(v2) * 10);)endFork
(print(readHeap(v2));
(countDown(cnt)
(fork(writeHeap(v3, readHeap(v3) * 10);)endFork
(print(readHeap(v3));
(countDown(cnt)
(await(cnt)
(print(100);
(countDown(cnt)
print(100);)))))))))))))))]
symbolTable = {cnt=0, v1=(Address: 0)=>int, v2=(Address: 0)=>int, v3=(Address: 0)=>int}
outputList = []
fileTable = {}
heapTable = {}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [(new(v2, 3);
(new(v3, 4);
(newLatch(cnt, readHeap(v2))
(fork(writeHeap(v1, readHeap(v1) * 10);)endFork
(print(readHeap(v1));
(countDown(cnt)
(fork(writeHeap(v2, readHeap(v2) * 10);)endFork
(print(readHeap(v2));
(countDown(cnt)
(fork(writeHeap(v3, readHeap(v3) * 10);)endFork
(print(readHeap(v3));
(countDown(cnt)
(await(cnt)
(print(100);
(countDown(cnt)
print(100);)))))))))))))))]
symbolTable = {cnt=0, v1=(Address: 1)=>int, v2=(Address: 0)=>int, v3=(Address: 0)=>int}
outputList = []
fileTable = {}
heapTable = {1=2}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [new(v2, 3);, (new(v3, 4);
(newLatch(cnt, readHeap(v2))
(fork(writeHeap(v1, readHeap(v1) * 10);)endFork
(print(readHeap(v1));
(countDown(cnt)
(fork(writeHeap(v2, readHeap(v2) * 10);)endFork
(print(readHeap(v2));
(countDown(cnt)
(fork(writeHeap(v3, readHeap(v3) * 10);)endFork
(print(readHeap(v3));
(countDown(cnt)
(await(cnt)
(print(100);
(countDown(cnt)
print(100);))))))))))))))]
symbolTable = {cnt=0, v1=(Address: 1)=>int, v2=(Address: 0)=>int, v3=(Address: 0)=>int}
outputList = []
fileTable = {}
heapTable = {1=2}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [(new(v3, 4);
(newLatch(cnt, readHeap(v2))
(fork(writeHeap(v1, readHeap(v1) * 10);)endFork
(print(readHeap(v1));
(countDown(cnt)
(fork(writeHeap(v2, readHeap(v2) * 10);)endFork
(print(readHeap(v2));
(countDown(cnt)
(fork(writeHeap(v3, readHeap(v3) * 10);)endFork
(print(readHeap(v3));
(countDown(cnt)
(await(cnt)
(print(100);
(countDown(cnt)
print(100);))))))))))))))]
symbolTable = {cnt=0, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 0)=>int}
outputList = []
fileTable = {}
heapTable = {1=2, 2=3}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [new(v3, 4);, (newLatch(cnt, readHeap(v2))
(fork(writeHeap(v1, readHeap(v1) * 10);)endFork
(print(readHeap(v1));
(countDown(cnt)
(fork(writeHeap(v2, readHeap(v2) * 10);)endFork
(print(readHeap(v2));
(countDown(cnt)
(fork(writeHeap(v3, readHeap(v3) * 10);)endFork
(print(readHeap(v3));
(countDown(cnt)
(await(cnt)
(print(100);
(countDown(cnt)
print(100);)))))))))))))]
symbolTable = {cnt=0, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 0)=>int}
outputList = []
fileTable = {}
heapTable = {1=2, 2=3}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [(newLatch(cnt, readHeap(v2))
(fork(writeHeap(v1, readHeap(v1) * 10);)endFork
(print(readHeap(v1));
(countDown(cnt)
(fork(writeHeap(v2, readHeap(v2) * 10);)endFork
(print(readHeap(v2));
(countDown(cnt)
(fork(writeHeap(v3, readHeap(v3) * 10);)endFork
(print(readHeap(v3));
(countDown(cnt)
(await(cnt)
(print(100);
(countDown(cnt)
print(100);)))))))))))))]
symbolTable = {cnt=0, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = []
fileTable = {}
heapTable = {1=2, 2=3, 3=4}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [newLatch(cnt, readHeap(v2)), (fork(writeHeap(v1, readHeap(v1) * 10);)endFork
(print(readHeap(v1));
(countDown(cnt)
(fork(writeHeap(v2, readHeap(v2) * 10);)endFork
(print(readHeap(v2));
(countDown(cnt)
(fork(writeHeap(v3, readHeap(v3) * 10);)endFork
(print(readHeap(v3));
(countDown(cnt)
(await(cnt)
(print(100);
(countDown(cnt)
print(100);))))))))))))]
symbolTable = {cnt=0, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = []
fileTable = {}
heapTable = {1=2, 2=3, 3=4}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [(fork(writeHeap(v1, readHeap(v1) * 10);)endFork
(print(readHeap(v1));
(countDown(cnt)
(fork(writeHeap(v2, readHeap(v2) * 10);)endFork
(print(readHeap(v2));
(countDown(cnt)
(fork(writeHeap(v3, readHeap(v3) * 10);)endFork
(print(readHeap(v3));
(countDown(cnt)
(await(cnt)
(print(100);
(countDown(cnt)
print(100);))))))))))))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = []
fileTable = {}
heapTable = {1=2, 2=3, 3=4}
latchTable = {1=3}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [fork(writeHeap(v1, readHeap(v1) * 10);)endFork, (print(readHeap(v1));
(countDown(cnt)
(fork(writeHeap(v2, readHeap(v2) * 10);)endFork
(print(readHeap(v2));
(countDown(cnt)
(fork(writeHeap(v3, readHeap(v3) * 10);)endFork
(print(readHeap(v3));
(countDown(cnt)
(await(cnt)
(print(100);
(countDown(cnt)
print(100);)))))))))))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = []
fileTable = {}
heapTable = {1=2, 2=3, 3=4}
latchTable = {1=3}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [(print(readHeap(v1));
(countDown(cnt)
(fork(writeHeap(v2, readHeap(v2) * 10);)endFork
(print(readHeap(v2));
(countDown(cnt)
(fork(writeHeap(v3, readHeap(v3) * 10);)endFork
(print(readHeap(v3));
(countDown(cnt)
(await(cnt)
(print(100);
(countDown(cnt)
print(100);)))))))))))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = []
fileTable = {}
heapTable = {1=2, 2=3, 3=4}
latchTable = {1=3}
-------------------------------------




-------------------------------------
ProgramState ID 3:
executionStack = [writeHeap(v1, readHeap(v1) * 10);]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = []
fileTable = {}
heapTable = {1=2, 2=3, 3=4}
latchTable = {1=3}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [print(readHeap(v1));, (countDown(cnt)
(fork(writeHeap(v2, readHeap(v2) * 10);)endFork
(print(readHeap(v2));
(countDown(cnt)
(fork(writeHeap(v3, readHeap(v3) * 10);)endFork
(print(readHeap(v3));
(countDown(cnt)
(await(cnt)
(print(100);
(countDown(cnt)
print(100);))))))))))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = []
fileTable = {}
heapTable = {1=20, 2=3, 3=4}
latchTable = {1=3}
-------------------------------------




-------------------------------------
ProgramState ID 3:
executionStack = []
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = []
fileTable = {}
heapTable = {1=20, 2=3, 3=4}
latchTable = {1=3}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [(countDown(cnt)
(fork(writeHeap(v2, readHeap(v2) * 10);)endFork
(print(readHeap(v2));
(countDown(cnt)
(fork(writeHeap(v3, readHeap(v3) * 10);)endFork
(print(readHeap(v3));
(countDown(cnt)
(await(cnt)
(print(100);
(countDown(cnt)
print(100);))))))))))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20]
fileTable = {}
heapTable = {1=20, 2=3, 3=4}
latchTable = {1=3}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [countDown(cnt), (fork(writeHeap(v2, readHeap(v2) * 10);)endFork
(print(readHeap(v2));
(countDown(cnt)
(fork(writeHeap(v3, readHeap(v3) * 10);)endFork
(print(readHeap(v3));
(countDown(cnt)
(await(cnt)
(print(100);
(countDown(cnt)
print(100);)))))))))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20]
fileTable = {}
heapTable = {1=20, 2=3, 3=4}
latchTable = {1=3}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [(fork(writeHeap(v2, readHeap(v2) * 10);)endFork
(print(readHeap(v2));
(countDown(cnt)
(fork(writeHeap(v3, readHeap(v3) * 10);)endFork
(print(readHeap(v3));
(countDown(cnt)
(await(cnt)
(print(100);
(countDown(cnt)
print(100);)))))))))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 2]
fileTable = {}
heapTable = {1=20, 2=3, 3=4}
latchTable = {1=2}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [fork(writeHeap(v2, readHeap(v2) * 10);)endFork, (print(readHeap(v2));
(countDown(cnt)
(fork(writeHeap(v3, readHeap(v3) * 10);)endFork
(print(readHeap(v3));
(countDown(cnt)
(await(cnt)
(print(100);
(countDown(cnt)
print(100);))))))))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 2]
fileTable = {}
heapTable = {1=20, 2=3, 3=4}
latchTable = {1=2}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [(print(readHeap(v2));
(countDown(cnt)
(fork(writeHeap(v3, readHeap(v3) * 10);)endFork
(print(readHeap(v3));
(countDown(cnt)
(await(cnt)
(print(100);
(countDown(cnt)
print(100);))))))))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 2]
fileTable = {}
heapTable = {1=20, 2=3, 3=4}
latchTable = {1=2}
-------------------------------------




-------------------------------------
ProgramState ID 4:
executionStack = [writeHeap(v2, readHeap(v2) * 10);]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 2]
fileTable = {}
heapTable = {1=20, 2=3, 3=4}
latchTable = {1=2}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [print(readHeap(v2));, (countDown(cnt)
(fork(writeHeap(v3, readHeap(v3) * 10);)endFork
(print(readHeap(v3));
(countDown(cnt)
(await(cnt)
(print(100);
(countDown(cnt)
print(100);)))))))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 2]
fileTable = {}
heapTable = {1=20, 2=30, 3=4}
latchTable = {1=2}
-------------------------------------




-------------------------------------
ProgramState ID 4:
executionStack = []
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 2]
fileTable = {}
heapTable = {1=20, 2=30, 3=4}
latchTable = {1=2}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [(countDown(cnt)
(fork(writeHeap(v3, readHeap(v3) * 10);)endFork
(print(readHeap(v3));
(countDown(cnt)
(await(cnt)
(print(100);
(countDown(cnt)
print(100);)))))))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 2, 30]
fileTable = {}
heapTable = {1=20, 2=30, 3=4}
latchTable = {1=2}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [countDown(cnt), (fork(writeHeap(v3, readHeap(v3) * 10);)endFork
(print(readHeap(v3));
(countDown(cnt)
(await(cnt)
(print(100);
(countDown(cnt)
print(100);))))))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 2, 30]
fileTable = {}
heapTable = {1=20, 2=30, 3=4}
latchTable = {1=2}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [(fork(writeHeap(v3, readHeap(v3) * 10);)endFork
(print(readHeap(v3));
(countDown(cnt)
(await(cnt)
(print(100);
(countDown(cnt)
print(100);))))))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 2, 30, 2]
fileTable = {}
heapTable = {1=20, 2=30, 3=4}
latchTable = {1=1}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [fork(writeHeap(v3, readHeap(v3) * 10);)endFork, (print(readHeap(v3));
(countDown(cnt)
(await(cnt)
(print(100);
(countDown(cnt)
print(100);)))))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 2, 30, 2]
fileTable = {}
heapTable = {1=20, 2=30, 3=4}
latchTable = {1=1}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [(print(readHeap(v3));
(countDown(cnt)
(await(cnt)
(print(100);
(countDown(cnt)
print(100);)))))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 2, 30, 2]
fileTable = {}
heapTable = {1=20, 2=30, 3=4}
latchTable = {1=1}
-------------------------------------




-------------------------------------
ProgramState ID 5:
executionStack = [writeHeap(v3, readHeap(v3) * 10);]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 2, 30, 2]
fileTable = {}
heapTable = {1=20, 2=30, 3=4}
latchTable = {1=1}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [print(readHeap(v3));, (countDown(cnt)
(await(cnt)
(print(100);
(countDown(cnt)
print(100);))))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 2, 30, 2]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=1}
-------------------------------------




-------------------------------------
ProgramState ID 5:
executionStack = []
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 2, 30, 2]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=1}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [(countDown(cnt)
(await(cnt)
(print(100);
(countDown(cnt)
print(100);))))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 2, 30, 2, 40]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=1}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [countDown(cnt), (await(cnt)
(print(100);
(countDown(cnt)
print(100);)))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 2, 30, 2, 40]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=1}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [(await(cnt)
(print(100);
(countDown(cnt)
print(100);)))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 2, 30, 2, 40, 2]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=0}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [await(cnt), (print(100);
(countDown(cnt)
print(100);))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 2, 30, 2, 40, 2]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=0}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [(print(100);
(countDown(cnt)
print(100);))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 2, 30, 2, 40, 2]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=0}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [print(100);, (countDown(cnt)
print(100);)]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 2, 30, 2, 40, 2]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=0}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [(countDown(cnt)
print(100);)]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 2, 30, 2, 40, 2, 100]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=0}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [countDown(cnt), print(100);]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 2, 30, 2, 40, 2, 100]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=0}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [print(100);]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 2, 30, 2, 40, 2, 100, 2]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=0}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = []
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 2, 30, 2, 40, 2, 100, 2, 100]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=0}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [Ref int v1;, (Ref int v2;
(Ref int v3;
(int cnt;
(new(v1, 2);
(new(v2, 3);
(new(v3, 4);
(newLatch(cnt, readHeap(v2))
(fork(writeHeap(v1, readHeap(v1) * 10);)endFork
(print(readHeap(v1));
(countDown(cnt)
(fork(writeHeap(v2, readHeap(v2) * 10);)endFork
(print(readHeap(v2));
(countDown(cnt)
(fork(writeHeap(v3, readHeap(v3) * 10);)endFork
(print(readHeap(v3));
(countDown(cnt)
(await(cnt)
(print(100);
(countDown(cnt)
print(100);)))))))))))))))))))]
symbolTable = {}
outputList = []
fileTable = {}
heapTable = {}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [(Ref int v2;
(Ref int v3;
(int cnt;
(new(v1, 2);
(new(v2, 3);
(new(v3, 4);
(newLatch(cnt, readHeap(v2))
(fork(writeHeap(v1, readHeap(v1) * 10);)endFork
(print(readHeap(v1));
(countDown(cnt)
(fork(writeHeap(v2, readHeap(v2) * 10);)endFork
(print(readHeap(v2));
(countDown(cnt)
(fork(writeHeap(v3, readHeap(v3) * 10);)endFork
(print(readHeap(v3));
(countDown(cnt)
(await(cnt)
(print(100);
(countDown(cnt)
print(100);)))))))))))))))))))]
symbolTable = {v1=(Address: 0)=>int}
outputList = []
fileTable = {}
heapTable = {}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [Ref int v2;, (Ref int v3;
(int cnt;
(new(v1, 2);
(new(v2, 3);
(new(v3, 4);
(newLatch(cnt, readHeap(v2))
(fork(writeHeap(v1, readHeap(v1) * 10);)endFork
(print(readHeap(v1));
(countDown(cnt)
(fork(writeHeap(v2, readHeap(v2) * 10);)endFork
(print(readHeap(v2));
(countDown(cnt)
(fork(writeHeap(v3, readHeap(v3) * 10);)endFork
(print(readHeap(v3));
(countDown(cnt)
(await(cnt)
(print(100);
(countDown(cnt)
print(100);))))))))))))))))))]
symbolTable = {v1=(Address: 0)=>int}
outputList = []
fileTable = {}
heapTable = {}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [(Ref int v3;
(int cnt;
(new(v1, 2);
(new(v2, 3);
(new(v3, 4);
(newLatch(cnt, readHeap(v2))
(fork(writeHeap(v1, readHeap(v1) * 10);)endFork
(print(readHeap(v1));
(countDown(cnt)
(fork(writeHeap(v2, readHeap(v2) * 10);)endFork
(print(readHeap(v2));
(countDown(cnt)
(fork(writeHeap(v3, readHeap(v3) * 10);)endFork
(print(readHeap(v3));
(countDown(cnt)
(await(cnt)
(print(100);
(countDown(cnt)
print(100);))))))))))))))))))]
symbolTable = {v1=(Address: 0)=>int, v2=(Address: 0)=>int}
outputList = []
fileTable = {}
heapTable = {}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [Ref int v3;, (int cnt;
(new(v1, 2);
(new(v2, 3);
(new(v3, 4);
(newLatch(cnt, readHeap(v2))
(fork(writeHeap(v1, readHeap(v1) * 10);)endFork
(print(readHeap(v1));
(countDown(cnt)
(fork(writeHeap(v2, readHeap(v2) * 10);)endFork
(print(readHeap(v2));
(countDown(cnt)
(fork(writeHeap(v3, readHeap(v3) * 10);)endFork
(print(readHeap(v3));
(countDown(cnt)
(await(cnt)
(print(100);
(countDown(cnt)
print(100);)))))))))))))))))]
symbolTable = {v1=(Address: 0)=>int, v2=(Address: 0)=>int}
outputList = []
fileTable = {}
heapTable = {}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [(int cnt;
(new(v1, 2);
(new(v2, 3);
(new(v3, 4);
(newLatch(cnt, readHeap(v2))
(fork(writeHeap(v1, readHeap(v1) * 10);)endFork
(print(readHeap(v1));
(countDown(cnt)
(fork(writeHeap(v2, readHeap(v2) * 10);)endFork
(print(readHeap(v2));
(countDown(cnt)
(fork(writeHeap(v3, readHeap(v3) * 10);)endFork
(print(readHeap(v3));
(countDown(cnt)
(await(cnt)
(print(100);
(countDown(cnt)
print(100);)))))))))))))))))]
symbolTable = {v1=(Address: 0)=>int, v2=(Address: 0)=>int, v3=(Address: 0)=>int}
outputList = []
fileTable = {}
heapTable = {}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [int cnt;, (new(v1, 2);
(new(v2, 3);
(new(v3, 4);
(newLatch(cnt, readHeap(v2))
(fork(writeHeap(v1, readHeap(v1) * 10);)endFork
(print(readHeap(v1));
(countDown(cnt)
(fork(writeHeap(v2, readHeap(v2) * 10);)endFork
(print(readHeap(v2));
(countDown(cnt)
(fork(writeHeap(v3, readHeap(v3) * 10);)endFork
(print(readHeap(v3));
(countDown(cnt)
(await(cnt)
(print(100);
(countDown(cnt)
print(100);))))))))))))))))]
symbolTable = {v1=(Address: 0)=>int, v2=(Address: 0)=>int, v3=(Address: 0)=>int}
outputList = []
fileTable = {}
heapTable = {}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [(new(v1, 2);
(new(v2, 3);
(new(v3, 4);
(newLatch(cnt, readHeap(v2))
(fork(writeHeap(v1, readHeap(v1) * 10);)endFork
(print(readHeap(v1));
(countDown(cnt)
(fork(writeHeap(v2, readHeap(v2) * 10);)endFork
(print(readHeap(v2));
(countDown(cnt)
(fork(writeHeap(v3, readHeap(v3) * 10);)endFork
(print(readHeap(v3));
(countDown(cnt)
(await(cnt)
(print(100);
(countDown(cnt)
print(100);))))))))))))))))]
symbolTable = {cnt=0, v1=(Address: 0)=>int, v2=(Address: 0)=>int, v3=(Address: 0)=>int}
outputList = []
fileTable = {}
heapTable = {}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [new(v1, 2);, (new(v2, 3);
(new(v3, 4);
(newLatch(cnt, readHeap(v2))
(fork(writeHeap(v1, readHeap(v1) * 10);)endFork
(print(readHeap(v1));
(countDown(cnt)
(fork(writeHeap(v2, readHeap(v2) * 10);)endFork
(print(readHeap(v2));
(countDown(cnt)
(fork(writeHeap(v3, readHeap(v3) * 10);)endFork
(print(readHeap(v3));
(countDown(cnt)
(await(cnt)
(print(100);
(countDown(cnt)
print(100);)))))))))))))))]
symbolTable = {cnt=0, v1=(Address: 0)=>int, v2=(Address: 0)=>int, v3=(Address: 0)=>int}
outputList = []
fileTable = {}
heapTable = {}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [(new(v2, 3);
(new(v3, 4);
(newLatch(cnt, readHeap(v2))
(fork(writeHeap(v1, readHeap(v1) * 10);)endFork
(print(readHeap(v1));
(countDown(cnt)
(fork(writeHeap(v2, readHeap(v2) * 10);)endFork
(print(readHeap(v2));
(countDown(cnt)
(fork(writeHeap(v3, readHeap(v3) * 10);)endFork
(print(readHeap(v3));
(countDown(cnt)
(await(cnt)
(print(100);
(countDown(cnt)
print(100);)))))))))))))))]
symbolTable = {cnt=0, v1=(Address: 1)=>int, v2=(Address: 0)=>int, v3=(Address: 0)=>int}
outputList = []
fileTable = {}
heapTable = {1=2}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [new(v2, 3);, (new(v3, 4);
(newLatch(cnt, readHeap(v2))
(fork(writeHeap(v1, readHeap(v1) * 10);)endFork
(print(readHeap(v1));
(countDown(cnt)
(fork(writeHeap(v2, readHeap(v2) * 10);)endFork
(print(readHeap(v2));
(countDown(cnt)
(fork(writeHeap(v3, readHeap(v3) * 10);)endFork
(print(readHeap(v3));
(countDown(cnt)
(await(cnt)
(print(100);
(countDown(cnt)
print(100);))))))))))))))]
symbolTable = {cnt=0, v1=(Address: 1)=>int, v2=(Address: 0)=>int, v3=(Address: 0)=>int}
outputList = []
fileTable = {}
heapTable = {1=2}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [(new(v3, 4);
(newLatch(cnt, readHeap(v2))
(fork(writeHeap(v1, readHeap(v1) * 10);)endFork
(print(readHeap(v1));
(countDown(cnt)
(fork(writeHeap(v2, readHeap(v2) * 10);)endFork
(print(readHeap(v2));
(countDown(cnt)
(fork(writeHeap(v3, readHeap(v3) * 10);)endFork
(print(readHeap(v3));
(countDown(cnt)
(await(cnt)
(print(100);
(countDown(cnt)
print(100);))))))))))))))]
symbolTable = {cnt=0, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 0)=>int}
outputList = []
fileTable = {}
heapTable = {1=2, 2=3}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [new(v3, 4);, (newLatch(cnt, readHeap(v2))
(fork(writeHeap(v1, readHeap(v1) * 10);)endFork
(print(readHeap(v1));
(countDown(cnt)
(fork(writeHeap(v2, readHeap(v2) * 10);)endFork
(print(readHeap(v2));
(countDown(cnt)
(fork(writeHeap(v3, readHeap(v3) * 10);)endFork
(print(readHeap(v3));
(countDown(cnt)
(await(cnt)
(print(100);
(countDown(cnt)
print(100);)))))))))))))]
symbolTable = {cnt=0, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 0)=>int}
outputList = []
fileTable = {}
heapTable = {1=2, 2=3}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [(newLatch(cnt, readHeap(v2))
(fork(writeHeap(v1, readHeap(v1) * 10);)endFork
(print(readHeap(v1));
(countDown(cnt)
(fork(writeHeap(v2, readHeap(v2) * 10);)endFork
(print(readHeap(v2));
(countDown(cnt)
(fork(writeHeap(v3, readHeap(v3) * 10);)endFork
(print(readHeap(v3));
(countDown(cnt)
(await(cnt)
(print(100);
(countDown(cnt)
print(100);)))))))))))))]
symbolTable = {cnt=0, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = []
fileTable = {}
heapTable = {1=2, 2=3, 3=4}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [newLatch(cnt, readHeap(v2)), (fork(writeHeap(v1, readHeap(v1) * 10);)endFork
(print(readHeap(v1));
(countDown(cnt)
(fork(writeHeap(v2, readHeap(v2) * 10);)endFork
(print(readHeap(v2));
(countDown(cnt)
(fork(writeHeap(v3, readHeap(v3) * 10);)endFork
(print(readHeap(v3));
(countDown(cnt)
(await(cnt)
(print(100);
(countDown(cnt)
print(100);))))))))))))]
symbolTable = {cnt=0, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = []
fileTable = {}
heapTable = {1=2, 2=3, 3=4}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [(fork(writeHeap(v1, readHeap(v1) * 10);)endFork
(print(readHeap(v1));
(countDown(cnt)
(fork(writeHeap(v2, readHeap(v2) * 10);)endFork
(print(readHeap(v2));
(countDown(cnt)
(fork(writeHeap(v3, readHeap(v3) * 10);)endFork
(print(readHeap(v3));
(countDown(cnt)
(await(cnt)
(print(100);
(countDown(cnt)
print(100);))))))))))))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = []
fileTable = {}
heapTable = {1=2, 2=3, 3=4}
latchTable = {1=3}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [fork(writeHeap(v1, readHeap(v1) * 10);)endFork, (print(readHeap(v1));
(countDown(cnt)
(fork(writeHeap(v2, readHeap(v2) * 10);)endFork
(print(readHeap(v2));
(countDown(cnt)
(fork(writeHeap(v3, readHeap(v3) * 10);)endFork
(print(readHeap(v3));
(countDown(cnt)
(await(cnt)
(print(100);
(countDown(cnt)
print(100);)))))))))))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = []
fileTable = {}
heapTable = {1=2, 2=3, 3=4}
latchTable = {1=3}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [(print(readHeap(v1));
(countDown(cnt)
(fork(writeHeap(v2, readHeap(v2) * 10);)endFork
(print(readHeap(v2));
(countDown(cnt)
(fork(writeHeap(v3, readHeap(v3) * 10);)endFork
(print(readHeap(v3));
(countDown(cnt)
(await(cnt)
(print(100);
(countDown(cnt)
print(100);)))))))))))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = []
fileTable = {}
heapTable = {1=2, 2=3, 3=4}
latchTable = {1=3}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [writeHeap(v1, readHeap(v1) * 10);]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = []
fileTable = {}
heapTable = {1=2, 2=3, 3=4}
latchTable = {1=3}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [print(readHeap(v1));, (countDown(cnt)
(fork(writeHeap(v2, readHeap(v2) * 10);)endFork
(print(readHeap(v2));
(countDown(cnt)
(fork(writeHeap(v3, readHeap(v3) * 10);)endFork
(print(readHeap(v3));
(countDown(cnt)
(await(cnt)
(print(100);
(countDown(cnt)
print(100);))))))))))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = []
fileTable = {}
heapTable = {1=20, 2=3, 3=4}
latchTable = {1=3}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = []
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = []
fileTable = {}
heapTable = {1=20, 2=3, 3=4}
latchTable = {1=3}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [(countDown(cnt)
(fork(writeHeap(v2, readHeap(v2) * 10);)endFork
(print(readHeap(v2));
(countDown(cnt)
(fork(writeHeap(v3, readHeap(v3) * 10);)endFork
(print(readHeap(v3));
(countDown(cnt)
(await(cnt)
(print(100);
(countDown(cnt)
print(100);))))))))))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20]
fileTable = {}
heapTable = {1=20, 2=3, 3=4}
latchTable = {1=3}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [countDown(cnt), (fork(writeHeap(v2, readHeap(v2) * 10);)endFork
(print(readHeap(v2));
(countDown(cnt)
(fork(writeHeap(v3, readHeap(v3) * 10);)endFork
(print(readHeap(v3));
(countDown(cnt)
(await(cnt)
(print(100);
(countDown(cnt)
print(100);)))))))))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20]
fileTable = {}
heapTable = {1=20, 2=3, 3=4}
latchTable = {1=3}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [(fork(writeHeap(v2, readHeap(v2) * 10);)endFork
(print(readHeap(v2));
(countDown(cnt)
(fork(writeHeap(v3, readHeap(v3) * 10);)endFork
(print(readHeap(v3));
(countDown(cnt)
(await(cnt)
(print(100);
(countDown(cnt)
print(100);)))))))))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 1]
fileTable = {}
heapTable = {1=20, 2=3, 3=4}
latchTable = {1=2}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [fork(writeHeap(v2, readHeap(v2) * 10);)endFork, (print(readHeap(v2));
(countDown(cnt)
(fork(writeHeap(v3, readHeap(v3) * 10);)endFork
(print(readHeap(v3));
(countDown(cnt)
(await(cnt)
(print(100);
(countDown(cnt)
print(100);))))))))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 1]
fileTable = {}
heapTable = {1=20, 2=3, 3=4}
latchTable = {1=2}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [(print(readHeap(v2));
(countDown(cnt)
(fork(writeHeap(v3, readHeap(v3) * 10);)endFork
(print(readHeap(v3));
(countDown(cnt)
(await(cnt)
(print(100);
(countDown(cnt)
print(100);))))))))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 1]
fileTable = {}
heapTable = {1=20, 2=3, 3=4}
latchTable = {1=2}
-------------------------------------




-------------------------------------
ProgramState ID 3:
executionStack = [writeHeap(v2, readHeap(v2) * 10);]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 1]
fileTable = {}
heapTable = {1=20, 2=3, 3=4}
latchTable = {1=2}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [print(readHeap(v2));, (countDown(cnt)
(fork(writeHeap(v3, readHeap(v3) * 10);)endFork
(print(readHeap(v3));
(countDown(cnt)
(await(cnt)
(print(100);
(countDown(cnt)
print(100);)))))))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 1]
fileTable = {}
heapTable = {1=20, 2=30, 3=4}
latchTable = {1=2}
-------------------------------------




-------------------------------------
ProgramState ID 3:
executionStack = []
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 1]
fileTable = {}
heapTable = {1=20, 2=30, 3=4}
latchTable = {1=2}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [(countDown(cnt)
(fork(writeHeap(v3, readHeap(v3) * 10);)endFork
(print(readHeap(v3));
(countDown(cnt)
(await(cnt)
(print(100);
(countDown(cnt)
print(100);)))))))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 1, 30]
fileTable = {}
heapTable = {1=20, 2=30, 3=4}
latchTable = {1=2}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [countDown(cnt), (fork(writeHeap(v3, readHeap(v3) * 10);)endFork
(print(readHeap(v3));
(countDown(cnt)
(await(cnt)
(print(100);
(countDown(cnt)
print(100);))))))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 1, 30]
fileTable = {}
heapTable = {1=20, 2=30, 3=4}
latchTable = {1=2}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [(fork(writeHeap(v3, readHeap(v3) * 10);)endFork
(print(readHeap(v3));
(countDown(cnt)
(await(cnt)
(print(100);
(countDown(cnt)
print(100);))))))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 1, 30, 1]
fileTable = {}
heapTable = {1=20, 2=30, 3=4}
latchTable = {1=1}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [fork(writeHeap(v3, readHeap(v3) * 10);)endFork, (print(readHeap(v3));
(countDown(cnt)
(await(cnt)
(print(100);
(countDown(cnt)
print(100);)))))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 1, 30, 1]
fileTable = {}
heapTable = {1=20, 2=30, 3=4}
latchTable = {1=1}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [(print(readHeap(v3));
(countDown(cnt)
(await(cnt)
(print(100);
(countDown(cnt)
print(100);)))))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 1, 30, 1]
fileTable = {}
heapTable = {1=20, 2=30, 3=4}
latchTable = {1=1}
-------------------------------------




-------------------------------------
ProgramState ID 4:
executionStack = [writeHeap(v3, readHeap(v3) * 10);]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 1, 30, 1]
fileTable = {}
heapTable = {1=20, 2=30, 3=4}
latchTable = {1=1}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [print(readHeap(v3));, (countDown(cnt)
(await(cnt)
(print(100);
(countDown(cnt)
print(100);))))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 1, 30, 1]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=1}
-------------------------------------




-------------------------------------
ProgramState ID 4:
executionStack = []
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 1, 30, 1]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=1}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [(countDown(cnt)
(await(cnt)
(print(100);
(countDown(cnt)
print(100);))))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 1, 30, 1, 40]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=1}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [countDown(cnt), (await(cnt)
(print(100);
(countDown(cnt)
print(100);)))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 1, 30, 1, 40]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=1}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [(await(cnt)
(print(100);
(countDown(cnt)
print(100);)))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 1, 30, 1, 40, 1]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=0}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [await(cnt), (print(100);
(countDown(cnt)
print(100);))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 1, 30, 1, 40, 1]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=0}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [(print(100);
(countDown(cnt)
print(100);))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 1, 30, 1, 40, 1]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=0}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [print(100);, (countDown(cnt)
print(100);)]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 1, 30, 1, 40, 1]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=0}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [(countDown(cnt)
print(100);)]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 1, 30, 1, 40, 1, 100]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=0}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [countDown(cnt), print(100);]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 1, 30, 1, 40, 1, 100]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=0}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [print(100);]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 1, 30, 1, 40, 1, 100, 1]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=0}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = []
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 1, 30, 1, 40, 1, 100, 1, 100]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=0}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [Ref int v1;, (Ref int v2;
(Ref int v3;
(int cnt;
(new(v1, 2);
(new(v2, 3);
(new(v3, 4);
(newLatch(cnt, readHeap(v2))
(fork((writeHeap(v1, readHeap(v1) * 10);
(print(readHeap(v1));
countDown(cnt))))endFork
(fork((writeHeap(v2, readHeap(v2) * 10);
(print(readHeap(v2));
countDown(cnt))))endFork
(fork((writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt))))endFork
(await(cnt)
(print(100);
(countDown(cnt)
print(100);)))))))))))))]
symbolTable = {}
outputList = []
fileTable = {}
heapTable = {}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [(Ref int v2;
(Ref int v3;
(int cnt;
(new(v1, 2);
(new(v2, 3);
(new(v3, 4);
(newLatch(cnt, readHeap(v2))
(fork((writeHeap(v1, readHeap(v1) * 10);
(print(readHeap(v1));
countDown(cnt))))endFork
(fork((writeHeap(v2, readHeap(v2) * 10);
(print(readHeap(v2));
countDown(cnt))))endFork
(fork((writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt))))endFork
(await(cnt)
(print(100);
(countDown(cnt)
print(100);)))))))))))))]
symbolTable = {v1=(Address: 0)=>int}
outputList = []
fileTable = {}
heapTable = {}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [Ref int v2;, (Ref int v3;
(int cnt;
(new(v1, 2);
(new(v2, 3);
(new(v3, 4);
(newLatch(cnt, readHeap(v2))
(fork((writeHeap(v1, readHeap(v1) * 10);
(print(readHeap(v1));
countDown(cnt))))endFork
(fork((writeHeap(v2, readHeap(v2) * 10);
(print(readHeap(v2));
countDown(cnt))))endFork
(fork((writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt))))endFork
(await(cnt)
(print(100);
(countDown(cnt)
print(100);))))))))))))]
symbolTable = {v1=(Address: 0)=>int}
outputList = []
fileTable = {}
heapTable = {}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [(Ref int v3;
(int cnt;
(new(v1, 2);
(new(v2, 3);
(new(v3, 4);
(newLatch(cnt, readHeap(v2))
(fork((writeHeap(v1, readHeap(v1) * 10);
(print(readHeap(v1));
countDown(cnt))))endFork
(fork((writeHeap(v2, readHeap(v2) * 10);
(print(readHeap(v2));
countDown(cnt))))endFork
(fork((writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt))))endFork
(await(cnt)
(print(100);
(countDown(cnt)
print(100);))))))))))))]
symbolTable = {v1=(Address: 0)=>int, v2=(Address: 0)=>int}
outputList = []
fileTable = {}
heapTable = {}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [Ref int v3;, (int cnt;
(new(v1, 2);
(new(v2, 3);
(new(v3, 4);
(newLatch(cnt, readHeap(v2))
(fork((writeHeap(v1, readHeap(v1) * 10);
(print(readHeap(v1));
countDown(cnt))))endFork
(fork((writeHeap(v2, readHeap(v2) * 10);
(print(readHeap(v2));
countDown(cnt))))endFork
(fork((writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt))))endFork
(await(cnt)
(print(100);
(countDown(cnt)
print(100);)))))))))))]
symbolTable = {v1=(Address: 0)=>int, v2=(Address: 0)=>int}
outputList = []
fileTable = {}
heapTable = {}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [(int cnt;
(new(v1, 2);
(new(v2, 3);
(new(v3, 4);
(newLatch(cnt, readHeap(v2))
(fork((writeHeap(v1, readHeap(v1) * 10);
(print(readHeap(v1));
countDown(cnt))))endFork
(fork((writeHeap(v2, readHeap(v2) * 10);
(print(readHeap(v2));
countDown(cnt))))endFork
(fork((writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt))))endFork
(await(cnt)
(print(100);
(countDown(cnt)
print(100);)))))))))))]
symbolTable = {v1=(Address: 0)=>int, v2=(Address: 0)=>int, v3=(Address: 0)=>int}
outputList = []
fileTable = {}
heapTable = {}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [int cnt;, (new(v1, 2);
(new(v2, 3);
(new(v3, 4);
(newLatch(cnt, readHeap(v2))
(fork((writeHeap(v1, readHeap(v1) * 10);
(print(readHeap(v1));
countDown(cnt))))endFork
(fork((writeHeap(v2, readHeap(v2) * 10);
(print(readHeap(v2));
countDown(cnt))))endFork
(fork((writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt))))endFork
(await(cnt)
(print(100);
(countDown(cnt)
print(100);))))))))))]
symbolTable = {v1=(Address: 0)=>int, v2=(Address: 0)=>int, v3=(Address: 0)=>int}
outputList = []
fileTable = {}
heapTable = {}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [(new(v1, 2);
(new(v2, 3);
(new(v3, 4);
(newLatch(cnt, readHeap(v2))
(fork((writeHeap(v1, readHeap(v1) * 10);
(print(readHeap(v1));
countDown(cnt))))endFork
(fork((writeHeap(v2, readHeap(v2) * 10);
(print(readHeap(v2));
countDown(cnt))))endFork
(fork((writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt))))endFork
(await(cnt)
(print(100);
(countDown(cnt)
print(100);))))))))))]
symbolTable = {cnt=0, v1=(Address: 0)=>int, v2=(Address: 0)=>int, v3=(Address: 0)=>int}
outputList = []
fileTable = {}
heapTable = {}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [new(v1, 2);, (new(v2, 3);
(new(v3, 4);
(newLatch(cnt, readHeap(v2))
(fork((writeHeap(v1, readHeap(v1) * 10);
(print(readHeap(v1));
countDown(cnt))))endFork
(fork((writeHeap(v2, readHeap(v2) * 10);
(print(readHeap(v2));
countDown(cnt))))endFork
(fork((writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt))))endFork
(await(cnt)
(print(100);
(countDown(cnt)
print(100);)))))))))]
symbolTable = {cnt=0, v1=(Address: 0)=>int, v2=(Address: 0)=>int, v3=(Address: 0)=>int}
outputList = []
fileTable = {}
heapTable = {}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [(new(v2, 3);
(new(v3, 4);
(newLatch(cnt, readHeap(v2))
(fork((writeHeap(v1, readHeap(v1) * 10);
(print(readHeap(v1));
countDown(cnt))))endFork
(fork((writeHeap(v2, readHeap(v2) * 10);
(print(readHeap(v2));
countDown(cnt))))endFork
(fork((writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt))))endFork
(await(cnt)
(print(100);
(countDown(cnt)
print(100);)))))))))]
symbolTable = {cnt=0, v1=(Address: 1)=>int, v2=(Address: 0)=>int, v3=(Address: 0)=>int}
outputList = []
fileTable = {}
heapTable = {1=2}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [new(v2, 3);, (new(v3, 4);
(newLatch(cnt, readHeap(v2))
(fork((writeHeap(v1, readHeap(v1) * 10);
(print(readHeap(v1));
countDown(cnt))))endFork
(fork((writeHeap(v2, readHeap(v2) * 10);
(print(readHeap(v2));
countDown(cnt))))endFork
(fork((writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt))))endFork
(await(cnt)
(print(100);
(countDown(cnt)
print(100);))))))))]
symbolTable = {cnt=0, v1=(Address: 1)=>int, v2=(Address: 0)=>int, v3=(Address: 0)=>int}
outputList = []
fileTable = {}
heapTable = {1=2}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [(new(v3, 4);
(newLatch(cnt, readHeap(v2))
(fork((writeHeap(v1, readHeap(v1) * 10);
(print(readHeap(v1));
countDown(cnt))))endFork
(fork((writeHeap(v2, readHeap(v2) * 10);
(print(readHeap(v2));
countDown(cnt))))endFork
(fork((writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt))))endFork
(await(cnt)
(print(100);
(countDown(cnt)
print(100);))))))))]
symbolTable = {cnt=0, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 0)=>int}
outputList = []
fileTable = {}
heapTable = {1=2, 2=3}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [new(v3, 4);, (newLatch(cnt, readHeap(v2))
(fork((writeHeap(v1, readHeap(v1) * 10);
(print(readHeap(v1));
countDown(cnt))))endFork
(fork((writeHeap(v2, readHeap(v2) * 10);
(print(readHeap(v2));
countDown(cnt))))endFork
(fork((writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt))))endFork
(await(cnt)
(print(100);
(countDown(cnt)
print(100);)))))))]
symbolTable = {cnt=0, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 0)=>int}
outputList = []
fileTable = {}
heapTable = {1=2, 2=3}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [(newLatch(cnt, readHeap(v2))
(fork((writeHeap(v1, readHeap(v1) * 10);
(print(readHeap(v1));
countDown(cnt))))endFork
(fork((writeHeap(v2, readHeap(v2) * 10);
(print(readHeap(v2));
countDown(cnt))))endFork
(fork((writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt))))endFork
(await(cnt)
(print(100);
(countDown(cnt)
print(100);)))))))]
symbolTable = {cnt=0, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = []
fileTable = {}
heapTable = {1=2, 2=3, 3=4}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [newLatch(cnt, readHeap(v2)), (fork((writeHeap(v1, readHeap(v1) * 10);
(print(readHeap(v1));
countDown(cnt))))endFork
(fork((writeHeap(v2, readHeap(v2) * 10);
(print(readHeap(v2));
countDown(cnt))))endFork
(fork((writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt))))endFork
(await(cnt)
(print(100);
(countDown(cnt)
print(100);))))))]
symbolTable = {cnt=0, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = []
fileTable = {}
heapTable = {1=2, 2=3, 3=4}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [(fork((writeHeap(v1, readHeap(v1) * 10);
(print(readHeap(v1));
countDown(cnt))))endFork
(fork((writeHeap(v2, readHeap(v2) * 10);
(print(readHeap(v2));
countDown(cnt))))endFork
(fork((writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt))))endFork
(await(cnt)
(print(100);
(countDown(cnt)
print(100);))))))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = []
fileTable = {}
heapTable = {1=2, 2=3, 3=4}
latchTable = {1=3}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [fork((writeHeap(v1, readHeap(v1) * 10);
(print(readHeap(v1));
countDown(cnt))))endFork, (fork((writeHeap(v2, readHeap(v2) * 10);
(print(readHeap(v2));
countDown(cnt))))endFork
(fork((writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt))))endFork
(await(cnt)
(print(100);
(countDown(cnt)
print(100);)))))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = []
fileTable = {}
heapTable = {1=2, 2=3, 3=4}
latchTable = {1=3}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [(fork((writeHeap(v2, readHeap(v2) * 10);
(print(readHeap(v2));
countDown(cnt))))endFork
(fork((writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt))))endFork
(await(cnt)
(print(100);
(countDown(cnt)
print(100);)))))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = []
fileTable = {}
heapTable = {1=2, 2=3, 3=4}
latchTable = {1=3}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [(writeHeap(v1, readHeap(v1) * 10);
(print(readHeap(v1));
countDown(cnt)))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = []
fileTable = {}
heapTable = {1=2, 2=3, 3=4}
latchTable = {1=3}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [fork((writeHeap(v2, readHeap(v2) * 10);
(print(readHeap(v2));
countDown(cnt))))endFork, (fork((writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt))))endFork
(await(cnt)
(print(100);
(countDown(cnt)
print(100);))))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = []
fileTable = {}
heapTable = {1=2, 2=3, 3=4}
latchTable = {1=3}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [writeHeap(v1, readHeap(v1) * 10);, (print(readHeap(v1));
countDown(cnt))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = []
fileTable = {}
heapTable = {1=2, 2=3, 3=4}
latchTable = {1=3}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [(fork((writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt))))endFork
(await(cnt)
(print(100);
(countDown(cnt)
print(100);))))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = []
fileTable = {}
heapTable = {1=20, 2=3, 3=4}
latchTable = {1=3}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [(print(readHeap(v1));
countDown(cnt))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = []
fileTable = {}
heapTable = {1=20, 2=3, 3=4}
latchTable = {1=3}
-------------------------------------




-------------------------------------
ProgramState ID 3:
executionStack = [(writeHeap(v2, readHeap(v2) * 10);
(print(readHeap(v2));
countDown(cnt)))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = []
fileTable = {}
heapTable = {1=20, 2=3, 3=4}
latchTable = {1=3}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [fork((writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt))))endFork, (await(cnt)
(print(100);
(countDown(cnt)
print(100);)))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = []
fileTable = {}
heapTable = {1=20, 2=3, 3=4}
latchTable = {1=3}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [print(readHeap(v1));, countDown(cnt)]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = []
fileTable = {}
heapTable = {1=20, 2=3, 3=4}
latchTable = {1=3}
-------------------------------------




-------------------------------------
ProgramState ID 3:
executionStack = [writeHeap(v2, readHeap(v2) * 10);, (print(readHeap(v2));
countDown(cnt))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = []
fileTable = {}
heapTable = {1=20, 2=3, 3=4}
latchTable = {1=3}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [(await(cnt)
(print(100);
(countDown(cnt)
print(100);)))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20]
fileTable = {}
heapTable = {1=20, 2=30, 3=4}
latchTable = {1=3}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [countDown(cnt)]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20]
fileTable = {}
heapTable = {1=20, 2=30, 3=4}
latchTable = {1=3}
-------------------------------------




-------------------------------------
ProgramState ID 3:
executionStack = [(print(readHeap(v2));
countDown(cnt))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20]
fileTable = {}
heapTable = {1=20, 2=30, 3=4}
latchTable = {1=3}
-------------------------------------




-------------------------------------
ProgramState ID 4:
executionStack = [(writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt)))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20]
fileTable = {}
heapTable = {1=20, 2=30, 3=4}
latchTable = {1=3}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [await(cnt), (print(100);
(countDown(cnt)
print(100);))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 2]
fileTable = {}
heapTable = {1=20, 2=30, 3=4}
latchTable = {1=2}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = []
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 2]
fileTable = {}
heapTable = {1=20, 2=30, 3=4}
latchTable = {1=2}
-------------------------------------




-------------------------------------
ProgramState ID 3:
executionStack = [print(readHeap(v2));, countDown(cnt)]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 2]
fileTable = {}
heapTable = {1=20, 2=30, 3=4}
latchTable = {1=2}
-------------------------------------




-------------------------------------
ProgramState ID 4:
executionStack = [writeHeap(v3, readHeap(v3) * 10);, (print(readHeap(v3));
countDown(cnt))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 2]
fileTable = {}
heapTable = {1=20, 2=30, 3=4}
latchTable = {1=2}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [await(cnt), (print(100);
(countDown(cnt)
print(100);))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 2, 30]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=2}
-------------------------------------




-------------------------------------
ProgramState ID 3:
executionStack = [countDown(cnt)]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 2, 30]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=2}
-------------------------------------




-------------------------------------
ProgramState ID 4:
executionStack = [(print(readHeap(v3));
countDown(cnt))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 2, 30]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=2}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [await(cnt), (print(100);
(countDown(cnt)
print(100);))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 2, 30, 3]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=1}
-------------------------------------




-------------------------------------
ProgramState ID 3:
executionStack = []
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 2, 30, 3]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=1}
-------------------------------------




-------------------------------------
ProgramState ID 4:
executionStack = [print(readHeap(v3));, countDown(cnt)]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 2, 30, 3]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=1}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [await(cnt), (print(100);
(countDown(cnt)
print(100);))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 2, 30, 3, 40]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=1}
-------------------------------------




-------------------------------------
ProgramState ID 4:
executionStack = [countDown(cnt)]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 2, 30, 3, 40]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=1}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [await(cnt), (print(100);
(countDown(cnt)
print(100);))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 2, 30, 3, 40, 4]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=0}
-------------------------------------




-------------------------------------
ProgramState ID 4:
executionStack = []
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 2, 30, 3, 40, 4]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=0}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [(print(100);
(countDown(cnt)
print(100);))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 2, 30, 3, 40, 4]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=0}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [print(100);, (countDown(cnt)
print(100);)]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 2, 30, 3, 40, 4]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=0}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [(countDown(cnt)
print(100);)]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 2, 30, 3, 40, 4, 100]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=0}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [countDown(cnt), print(100);]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 2, 30, 3, 40, 4, 100]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=0}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [print(100);]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 2, 30, 3, 40, 4, 100, 1]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=0}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = []
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 2, 30, 3, 40, 4, 100, 1, 100]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=0}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [Ref int v1;, (Ref int v2;
(Ref int v3;
(int cnt;
(new(v1, 2);
(new(v2, 3);
(new(v3, 4);
(newLatch(cnt, readHeap(v2))
(fork((writeHeap(v1, readHeap(v1) * 10);
(print(readHeap(v1));
countDown(cnt))))endFork
(fork((writeHeap(v2, readHeap(v2) * 10);
(print(readHeap(v2));
countDown(cnt))))endFork
(fork((writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt))))endFork
(await(cnt)
(print(100);
(countDown(cnt)
print(100);)))))))))))))]
symbolTable = {}
outputList = []
fileTable = {}
heapTable = {}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [(Ref int v2;
(Ref int v3;
(int cnt;
(new(v1, 2);
(new(v2, 3);
(new(v3, 4);
(newLatch(cnt, readHeap(v2))
(fork((writeHeap(v1, readHeap(v1) * 10);
(print(readHeap(v1));
countDown(cnt))))endFork
(fork((writeHeap(v2, readHeap(v2) * 10);
(print(readHeap(v2));
countDown(cnt))))endFork
(fork((writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt))))endFork
(await(cnt)
(print(100);
(countDown(cnt)
print(100);)))))))))))))]
symbolTable = {v1=(Address: 0)=>int}
outputList = []
fileTable = {}
heapTable = {}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [Ref int v2;, (Ref int v3;
(int cnt;
(new(v1, 2);
(new(v2, 3);
(new(v3, 4);
(newLatch(cnt, readHeap(v2))
(fork((writeHeap(v1, readHeap(v1) * 10);
(print(readHeap(v1));
countDown(cnt))))endFork
(fork((writeHeap(v2, readHeap(v2) * 10);
(print(readHeap(v2));
countDown(cnt))))endFork
(fork((writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt))))endFork
(await(cnt)
(print(100);
(countDown(cnt)
print(100);))))))))))))]
symbolTable = {v1=(Address: 0)=>int}
outputList = []
fileTable = {}
heapTable = {}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [(Ref int v3;
(int cnt;
(new(v1, 2);
(new(v2, 3);
(new(v3, 4);
(newLatch(cnt, readHeap(v2))
(fork((writeHeap(v1, readHeap(v1) * 10);
(print(readHeap(v1));
countDown(cnt))))endFork
(fork((writeHeap(v2, readHeap(v2) * 10);
(print(readHeap(v2));
countDown(cnt))))endFork
(fork((writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt))))endFork
(await(cnt)
(print(100);
(countDown(cnt)
print(100);))))))))))))]
symbolTable = {v1=(Address: 0)=>int, v2=(Address: 0)=>int}
outputList = []
fileTable = {}
heapTable = {}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [Ref int v3;, (int cnt;
(new(v1, 2);
(new(v2, 3);
(new(v3, 4);
(newLatch(cnt, readHeap(v2))
(fork((writeHeap(v1, readHeap(v1) * 10);
(print(readHeap(v1));
countDown(cnt))))endFork
(fork((writeHeap(v2, readHeap(v2) * 10);
(print(readHeap(v2));
countDown(cnt))))endFork
(fork((writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt))))endFork
(await(cnt)
(print(100);
(countDown(cnt)
print(100);)))))))))))]
symbolTable = {v1=(Address: 0)=>int, v2=(Address: 0)=>int}
outputList = []
fileTable = {}
heapTable = {}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [(int cnt;
(new(v1, 2);
(new(v2, 3);
(new(v3, 4);
(newLatch(cnt, readHeap(v2))
(fork((writeHeap(v1, readHeap(v1) * 10);
(print(readHeap(v1));
countDown(cnt))))endFork
(fork((writeHeap(v2, readHeap(v2) * 10);
(print(readHeap(v2));
countDown(cnt))))endFork
(fork((writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt))))endFork
(await(cnt)
(print(100);
(countDown(cnt)
print(100);)))))))))))]
symbolTable = {v1=(Address: 0)=>int, v2=(Address: 0)=>int, v3=(Address: 0)=>int}
outputList = []
fileTable = {}
heapTable = {}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [int cnt;, (new(v1, 2);
(new(v2, 3);
(new(v3, 4);
(newLatch(cnt, readHeap(v2))
(fork((writeHeap(v1, readHeap(v1) * 10);
(print(readHeap(v1));
countDown(cnt))))endFork
(fork((writeHeap(v2, readHeap(v2) * 10);
(print(readHeap(v2));
countDown(cnt))))endFork
(fork((writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt))))endFork
(await(cnt)
(print(100);
(countDown(cnt)
print(100);))))))))))]
symbolTable = {v1=(Address: 0)=>int, v2=(Address: 0)=>int, v3=(Address: 0)=>int}
outputList = []
fileTable = {}
heapTable = {}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [(new(v1, 2);
(new(v2, 3);
(new(v3, 4);
(newLatch(cnt, readHeap(v2))
(fork((writeHeap(v1, readHeap(v1) * 10);
(print(readHeap(v1));
countDown(cnt))))endFork
(fork((writeHeap(v2, readHeap(v2) * 10);
(print(readHeap(v2));
countDown(cnt))))endFork
(fork((writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt))))endFork
(await(cnt)
(print(100);
(countDown(cnt)
print(100);))))))))))]
symbolTable = {cnt=0, v1=(Address: 0)=>int, v2=(Address: 0)=>int, v3=(Address: 0)=>int}
outputList = []
fileTable = {}
heapTable = {}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [new(v1, 2);, (new(v2, 3);
(new(v3, 4);
(newLatch(cnt, readHeap(v2))
(fork((writeHeap(v1, readHeap(v1) * 10);
(print(readHeap(v1));
countDown(cnt))))endFork
(fork((writeHeap(v2, readHeap(v2) * 10);
(print(readHeap(v2));
countDown(cnt))))endFork
(fork((writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt))))endFork
(await(cnt)
(print(100);
(countDown(cnt)
print(100);)))))))))]
symbolTable = {cnt=0, v1=(Address: 0)=>int, v2=(Address: 0)=>int, v3=(Address: 0)=>int}
outputList = []
fileTable = {}
heapTable = {}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [(new(v2, 3);
(new(v3, 4);
(newLatch(cnt, readHeap(v2))
(fork((writeHeap(v1, readHeap(v1) * 10);
(print(readHeap(v1));
countDown(cnt))))endFork
(fork((writeHeap(v2, readHeap(v2) * 10);
(print(readHeap(v2));
countDown(cnt))))endFork
(fork((writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt))))endFork
(await(cnt)
(print(100);
(countDown(cnt)
print(100);)))))))))]
symbolTable = {cnt=0, v1=(Address: 1)=>int, v2=(Address: 0)=>int, v3=(Address: 0)=>int}
outputList = []
fileTable = {}
heapTable = {1=2}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [new(v2, 3);, (new(v3, 4);
(newLatch(cnt, readHeap(v2))
(fork((writeHeap(v1, readHeap(v1) * 10);
(print(readHeap(v1));
countDown(cnt))))endFork
(fork((writeHeap(v2, readHeap(v2) * 10);
(print(readHeap(v2));
countDown(cnt))))endFork
(fork((writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt))))endFork
(await(cnt)
(print(100);
(countDown(cnt)
print(100);))))))))]
symbolTable = {cnt=0, v1=(Address: 1)=>int, v2=(Address: 0)=>int, v3=(Address: 0)=>int}
outputList = []
fileTable = {}
heapTable = {1=2}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [(new(v3, 4);
(newLatch(cnt, readHeap(v2))
(fork((writeHeap(v1, readHeap(v1) * 10);
(print(readHeap(v1));
countDown(cnt))))endFork
(fork((writeHeap(v2, readHeap(v2) * 10);
(print(readHeap(v2));
countDown(cnt))))endFork
(fork((writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt))))endFork
(await(cnt)
(print(100);
(countDown(cnt)
print(100);))))))))]
symbolTable = {cnt=0, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 0)=>int}
outputList = []
fileTable = {}
heapTable = {1=2, 2=3}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [new(v3, 4);, (newLatch(cnt, readHeap(v2))
(fork((writeHeap(v1, readHeap(v1) * 10);
(print(readHeap(v1));
countDown(cnt))))endFork
(fork((writeHeap(v2, readHeap(v2) * 10);
(print(readHeap(v2));
countDown(cnt))))endFork
(fork((writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt))))endFork
(await(cnt)
(print(100);
(countDown(cnt)
print(100);)))))))]
symbolTable = {cnt=0, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 0)=>int}
outputList = []
fileTable = {}
heapTable = {1=2, 2=3}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [(newLatch(cnt, readHeap(v2))
(fork((writeHeap(v1, readHeap(v1) * 10);
(print(readHeap(v1));
countDown(cnt))))endFork
(fork((writeHeap(v2, readHeap(v2) * 10);
(print(readHeap(v2));
countDown(cnt))))endFork
(fork((writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt))))endFork
(await(cnt)
(print(100);
(countDown(cnt)
print(100);)))))))]
symbolTable = {cnt=0, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = []
fileTable = {}
heapTable = {1=2, 2=3, 3=4}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [newLatch(cnt, readHeap(v2)), (fork((writeHeap(v1, readHeap(v1) * 10);
(print(readHeap(v1));
countDown(cnt))))endFork
(fork((writeHeap(v2, readHeap(v2) * 10);
(print(readHeap(v2));
countDown(cnt))))endFork
(fork((writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt))))endFork
(await(cnt)
(print(100);
(countDown(cnt)
print(100);))))))]
symbolTable = {cnt=0, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = []
fileTable = {}
heapTable = {1=2, 2=3, 3=4}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [(fork((writeHeap(v1, readHeap(v1) * 10);
(print(readHeap(v1));
countDown(cnt))))endFork
(fork((writeHeap(v2, readHeap(v2) * 10);
(print(readHeap(v2));
countDown(cnt))))endFork
(fork((writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt))))endFork
(await(cnt)
(print(100);
(countDown(cnt)
print(100);))))))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = []
fileTable = {}
heapTable = {1=2, 2=3, 3=4}
latchTable = {1=3}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [fork((writeHeap(v1, readHeap(v1) * 10);
(print(readHeap(v1));
countDown(cnt))))endFork, (fork((writeHeap(v2, readHeap(v2) * 10);
(print(readHeap(v2));
countDown(cnt))))endFork
(fork((writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt))))endFork
(await(cnt)
(print(100);
(countDown(cnt)
print(100);)))))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = []
fileTable = {}
heapTable = {1=2, 2=3, 3=4}
latchTable = {1=3}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [(fork((writeHeap(v2, readHeap(v2) * 10);
(print(readHeap(v2));
countDown(cnt))))endFork
(fork((writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt))))endFork
(await(cnt)
(print(100);
(countDown(cnt)
print(100);)))))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = []
fileTable = {}
heapTable = {1=2, 2=3, 3=4}
latchTable = {1=3}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [(writeHeap(v1, readHeap(v1) * 10);
(print(readHeap(v1));
countDown(cnt)))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = []
fileTable = {}
heapTable = {1=2, 2=3, 3=4}
latchTable = {1=3}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [fork((writeHeap(v2, readHeap(v2) * 10);
(print(readHeap(v2));
countDown(cnt))))endFork, (fork((writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt))))endFork
(await(cnt)
(print(100);
(countDown(cnt)
print(100);))))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = []
fileTable = {}
heapTable = {1=2, 2=3, 3=4}
latchTable = {1=3}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [writeHeap(v1, readHeap(v1) * 10);, (print(readHeap(v1));
countDown(cnt))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = []
fileTable = {}
heapTable = {1=2, 2=3, 3=4}
latchTable = {1=3}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [(fork((writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt))))endFork
(await(cnt)
(print(100);
(countDown(cnt)
print(100);))))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = []
fileTable = {}
heapTable = {1=20, 2=3, 3=4}
latchTable = {1=3}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [(print(readHeap(v1));
countDown(cnt))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = []
fileTable = {}
heapTable = {1=20, 2=3, 3=4}
latchTable = {1=3}
-------------------------------------




-------------------------------------
ProgramState ID 3:
executionStack = [(writeHeap(v2, readHeap(v2) * 10);
(print(readHeap(v2));
countDown(cnt)))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = []
fileTable = {}
heapTable = {1=20, 2=3, 3=4}
latchTable = {1=3}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [fork((writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt))))endFork, (await(cnt)
(print(100);
(countDown(cnt)
print(100);)))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = []
fileTable = {}
heapTable = {1=20, 2=3, 3=4}
latchTable = {1=3}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [print(readHeap(v1));, countDown(cnt)]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = []
fileTable = {}
heapTable = {1=20, 2=3, 3=4}
latchTable = {1=3}
-------------------------------------




-------------------------------------
ProgramState ID 3:
executionStack = [writeHeap(v2, readHeap(v2) * 10);, (print(readHeap(v2));
countDown(cnt))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = []
fileTable = {}
heapTable = {1=20, 2=3, 3=4}
latchTable = {1=3}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [(await(cnt)
(print(100);
(countDown(cnt)
print(100);)))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20]
fileTable = {}
heapTable = {1=20, 2=30, 3=4}
latchTable = {1=3}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [countDown(cnt)]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20]
fileTable = {}
heapTable = {1=20, 2=30, 3=4}
latchTable = {1=3}
-------------------------------------




-------------------------------------
ProgramState ID 3:
executionStack = [(print(readHeap(v2));
countDown(cnt))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20]
fileTable = {}
heapTable = {1=20, 2=30, 3=4}
latchTable = {1=3}
-------------------------------------




-------------------------------------
ProgramState ID 4:
executionStack = [(writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt)))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20]
fileTable = {}
heapTable = {1=20, 2=30, 3=4}
latchTable = {1=3}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [await(cnt), (print(100);
(countDown(cnt)
print(100);))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 2]
fileTable = {}
heapTable = {1=20, 2=30, 3=4}
latchTable = {1=2}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = []
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 2]
fileTable = {}
heapTable = {1=20, 2=30, 3=4}
latchTable = {1=2}
-------------------------------------




-------------------------------------
ProgramState ID 3:
executionStack = [print(readHeap(v2));, countDown(cnt)]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 2]
fileTable = {}
heapTable = {1=20, 2=30, 3=4}
latchTable = {1=2}
-------------------------------------




-------------------------------------
ProgramState ID 4:
executionStack = [writeHeap(v3, readHeap(v3) * 10);, (print(readHeap(v3));
countDown(cnt))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 2]
fileTable = {}
heapTable = {1=20, 2=30, 3=4}
latchTable = {1=2}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [await(cnt), (print(100);
(countDown(cnt)
print(100);))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 2, 30]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=2}
-------------------------------------




-------------------------------------
ProgramState ID 3:
executionStack = [countDown(cnt)]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 2, 30]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=2}
-------------------------------------




-------------------------------------
ProgramState ID 4:
executionStack = [(print(readHeap(v3));
countDown(cnt))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 2, 30]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=2}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [await(cnt), (print(100);
(countDown(cnt)
print(100);))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 2, 30, 3]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=1}
-------------------------------------




-------------------------------------
ProgramState ID 3:
executionStack = []
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 2, 30, 3]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=1}
-------------------------------------




-------------------------------------
ProgramState ID 4:
executionStack = [print(readHeap(v3));, countDown(cnt)]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 2, 30, 3]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=1}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [await(cnt), (print(100);
(countDown(cnt)
print(100);))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 2, 30, 3, 40]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=1}
-------------------------------------




-------------------------------------
ProgramState ID 4:
executionStack = [countDown(cnt)]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 2, 30, 3, 40]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=1}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [await(cnt), (print(100);
(countDown(cnt)
print(100);))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 2, 30, 3, 40, 4]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=0}
-------------------------------------




-------------------------------------
ProgramState ID 4:
executionStack = []
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 2, 30, 3, 40, 4]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=0}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [(print(100);
(countDown(cnt)
print(100);))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 2, 30, 3, 40, 4]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=0}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [print(100);, (countDown(cnt)
print(100);)]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 2, 30, 3, 40, 4]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=0}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [(countDown(cnt)
print(100);)]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 2, 30, 3, 40, 4, 100]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=0}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [countDown(cnt), print(100);]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 2, 30, 3, 40, 4, 100]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=0}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [print(100);]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 2, 30, 3, 40, 4, 100, 1]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=0}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = []
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 2, 30, 3, 40, 4, 100, 1, 100]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=0}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [Ref int v1;, (Ref int v2;
(Ref int v3;
(int cnt;
(new(v1, 2);
(new(v2, 3);
(new(v3, 4);
(newLatch(cnt, readHeap(v2))
(fork((writeHeap(v1, readHeap(v1) * 10);
(print(readHeap(v1));
countDown(cnt))))endFork
(fork((writeHeap(v2, readHeap(v2) * 10);
(print(readHeap(v2));
countDown(cnt))))endFork
(fork((writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt))))endFork
(await(cnt)
(print(100);
(countDown(cnt)
print(100);)))))))))))))]
symbolTable = {}
outputList = []
fileTable = {}
heapTable = {}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [(Ref int v2;
(Ref int v3;
(int cnt;
(new(v1, 2);
(new(v2, 3);
(new(v3, 4);
(newLatch(cnt, readHeap(v2))
(fork((writeHeap(v1, readHeap(v1) * 10);
(print(readHeap(v1));
countDown(cnt))))endFork
(fork((writeHeap(v2, readHeap(v2) * 10);
(print(readHeap(v2));
countDown(cnt))))endFork
(fork((writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt))))endFork
(await(cnt)
(print(100);
(countDown(cnt)
print(100);)))))))))))))]
symbolTable = {v1=(Address: 0)=>int}
outputList = []
fileTable = {}
heapTable = {}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [Ref int v2;, (Ref int v3;
(int cnt;
(new(v1, 2);
(new(v2, 3);
(new(v3, 4);
(newLatch(cnt, readHeap(v2))
(fork((writeHeap(v1, readHeap(v1) * 10);
(print(readHeap(v1));
countDown(cnt))))endFork
(fork((writeHeap(v2, readHeap(v2) * 10);
(print(readHeap(v2));
countDown(cnt))))endFork
(fork((writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt))))endFork
(await(cnt)
(print(100);
(countDown(cnt)
print(100);))))))))))))]
symbolTable = {v1=(Address: 0)=>int}
outputList = []
fileTable = {}
heapTable = {}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [(Ref int v3;
(int cnt;
(new(v1, 2);
(new(v2, 3);
(new(v3, 4);
(newLatch(cnt, readHeap(v2))
(fork((writeHeap(v1, readHeap(v1) * 10);
(print(readHeap(v1));
countDown(cnt))))endFork
(fork((writeHeap(v2, readHeap(v2) * 10);
(print(readHeap(v2));
countDown(cnt))))endFork
(fork((writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt))))endFork
(await(cnt)
(print(100);
(countDown(cnt)
print(100);))))))))))))]
symbolTable = {v1=(Address: 0)=>int, v2=(Address: 0)=>int}
outputList = []
fileTable = {}
heapTable = {}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [Ref int v3;, (int cnt;
(new(v1, 2);
(new(v2, 3);
(new(v3, 4);
(newLatch(cnt, readHeap(v2))
(fork((writeHeap(v1, readHeap(v1) * 10);
(print(readHeap(v1));
countDown(cnt))))endFork
(fork((writeHeap(v2, readHeap(v2) * 10);
(print(readHeap(v2));
countDown(cnt))))endFork
(fork((writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt))))endFork
(await(cnt)
(print(100);
(countDown(cnt)
print(100);)))))))))))]
symbolTable = {v1=(Address: 0)=>int, v2=(Address: 0)=>int}
outputList = []
fileTable = {}
heapTable = {}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [(int cnt;
(new(v1, 2);
(new(v2, 3);
(new(v3, 4);
(newLatch(cnt, readHeap(v2))
(fork((writeHeap(v1, readHeap(v1) * 10);
(print(readHeap(v1));
countDown(cnt))))endFork
(fork((writeHeap(v2, readHeap(v2) * 10);
(print(readHeap(v2));
countDown(cnt))))endFork
(fork((writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt))))endFork
(await(cnt)
(print(100);
(countDown(cnt)
print(100);)))))))))))]
symbolTable = {v1=(Address: 0)=>int, v2=(Address: 0)=>int, v3=(Address: 0)=>int}
outputList = []
fileTable = {}
heapTable = {}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [int cnt;, (new(v1, 2);
(new(v2, 3);
(new(v3, 4);
(newLatch(cnt, readHeap(v2))
(fork((writeHeap(v1, readHeap(v1) * 10);
(print(readHeap(v1));
countDown(cnt))))endFork
(fork((writeHeap(v2, readHeap(v2) * 10);
(print(readHeap(v2));
countDown(cnt))))endFork
(fork((writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt))))endFork
(await(cnt)
(print(100);
(countDown(cnt)
print(100);))))))))))]
symbolTable = {v1=(Address: 0)=>int, v2=(Address: 0)=>int, v3=(Address: 0)=>int}
outputList = []
fileTable = {}
heapTable = {}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [(new(v1, 2);
(new(v2, 3);
(new(v3, 4);
(newLatch(cnt, readHeap(v2))
(fork((writeHeap(v1, readHeap(v1) * 10);
(print(readHeap(v1));
countDown(cnt))))endFork
(fork((writeHeap(v2, readHeap(v2) * 10);
(print(readHeap(v2));
countDown(cnt))))endFork
(fork((writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt))))endFork
(await(cnt)
(print(100);
(countDown(cnt)
print(100);))))))))))]
symbolTable = {cnt=0, v1=(Address: 0)=>int, v2=(Address: 0)=>int, v3=(Address: 0)=>int}
outputList = []
fileTable = {}
heapTable = {}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [new(v1, 2);, (new(v2, 3);
(new(v3, 4);
(newLatch(cnt, readHeap(v2))
(fork((writeHeap(v1, readHeap(v1) * 10);
(print(readHeap(v1));
countDown(cnt))))endFork
(fork((writeHeap(v2, readHeap(v2) * 10);
(print(readHeap(v2));
countDown(cnt))))endFork
(fork((writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt))))endFork
(await(cnt)
(print(100);
(countDown(cnt)
print(100);)))))))))]
symbolTable = {cnt=0, v1=(Address: 0)=>int, v2=(Address: 0)=>int, v3=(Address: 0)=>int}
outputList = []
fileTable = {}
heapTable = {}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [(new(v2, 3);
(new(v3, 4);
(newLatch(cnt, readHeap(v2))
(fork((writeHeap(v1, readHeap(v1) * 10);
(print(readHeap(v1));
countDown(cnt))))endFork
(fork((writeHeap(v2, readHeap(v2) * 10);
(print(readHeap(v2));
countDown(cnt))))endFork
(fork((writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt))))endFork
(await(cnt)
(print(100);
(countDown(cnt)
print(100);)))))))))]
symbolTable = {cnt=0, v1=(Address: 1)=>int, v2=(Address: 0)=>int, v3=(Address: 0)=>int}
outputList = []
fileTable = {}
heapTable = {1=2}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [new(v2, 3);, (new(v3, 4);
(newLatch(cnt, readHeap(v2))
(fork((writeHeap(v1, readHeap(v1) * 10);
(print(readHeap(v1));
countDown(cnt))))endFork
(fork((writeHeap(v2, readHeap(v2) * 10);
(print(readHeap(v2));
countDown(cnt))))endFork
(fork((writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt))))endFork
(await(cnt)
(print(100);
(countDown(cnt)
print(100);))))))))]
symbolTable = {cnt=0, v1=(Address: 1)=>int, v2=(Address: 0)=>int, v3=(Address: 0)=>int}
outputList = []
fileTable = {}
heapTable = {1=2}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [(new(v3, 4);
(newLatch(cnt, readHeap(v2))
(fork((writeHeap(v1, readHeap(v1) * 10);
(print(readHeap(v1));
countDown(cnt))))endFork
(fork((writeHeap(v2, readHeap(v2) * 10);
(print(readHeap(v2));
countDown(cnt))))endFork
(fork((writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt))))endFork
(await(cnt)
(print(100);
(countDown(cnt)
print(100);))))))))]
symbolTable = {cnt=0, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 0)=>int}
outputList = []
fileTable = {}
heapTable = {1=2, 2=3}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [new(v3, 4);, (newLatch(cnt, readHeap(v2))
(fork((writeHeap(v1, readHeap(v1) * 10);
(print(readHeap(v1));
countDown(cnt))))endFork
(fork((writeHeap(v2, readHeap(v2) * 10);
(print(readHeap(v2));
countDown(cnt))))endFork
(fork((writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt))))endFork
(await(cnt)
(print(100);
(countDown(cnt)
print(100);)))))))]
symbolTable = {cnt=0, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 0)=>int}
outputList = []
fileTable = {}
heapTable = {1=2, 2=3}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [(newLatch(cnt, readHeap(v2))
(fork((writeHeap(v1, readHeap(v1) * 10);
(print(readHeap(v1));
countDown(cnt))))endFork
(fork((writeHeap(v2, readHeap(v2) * 10);
(print(readHeap(v2));
countDown(cnt))))endFork
(fork((writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt))))endFork
(await(cnt)
(print(100);
(countDown(cnt)
print(100);)))))))]
symbolTable = {cnt=0, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = []
fileTable = {}
heapTable = {1=2, 2=3, 3=4}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [newLatch(cnt, readHeap(v2)), (fork((writeHeap(v1, readHeap(v1) * 10);
(print(readHeap(v1));
countDown(cnt))))endFork
(fork((writeHeap(v2, readHeap(v2) * 10);
(print(readHeap(v2));
countDown(cnt))))endFork
(fork((writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt))))endFork
(await(cnt)
(print(100);
(countDown(cnt)
print(100);))))))]
symbolTable = {cnt=0, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = []
fileTable = {}
heapTable = {1=2, 2=3, 3=4}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [(fork((writeHeap(v1, readHeap(v1) * 10);
(print(readHeap(v1));
countDown(cnt))))endFork
(fork((writeHeap(v2, readHeap(v2) * 10);
(print(readHeap(v2));
countDown(cnt))))endFork
(fork((writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt))))endFork
(await(cnt)
(print(100);
(countDown(cnt)
print(100);))))))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = []
fileTable = {}
heapTable = {1=2, 2=3, 3=4}
latchTable = {1=3}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [fork((writeHeap(v1, readHeap(v1) * 10);
(print(readHeap(v1));
countDown(cnt))))endFork, (fork((writeHeap(v2, readHeap(v2) * 10);
(print(readHeap(v2));
countDown(cnt))))endFork
(fork((writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt))))endFork
(await(cnt)
(print(100);
(countDown(cnt)
print(100);)))))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = []
fileTable = {}
heapTable = {1=2, 2=3, 3=4}
latchTable = {1=3}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [(fork((writeHeap(v2, readHeap(v2) * 10);
(print(readHeap(v2));
countDown(cnt))))endFork
(fork((writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt))))endFork
(await(cnt)
(print(100);
(countDown(cnt)
print(100);)))))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = []
fileTable = {}
heapTable = {1=2, 2=3, 3=4}
latchTable = {1=3}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [(writeHeap(v1, readHeap(v1) * 10);
(print(readHeap(v1));
countDown(cnt)))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = []
fileTable = {}
heapTable = {1=2, 2=3, 3=4}
latchTable = {1=3}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [fork((writeHeap(v2, readHeap(v2) * 10);
(print(readHeap(v2));
countDown(cnt))))endFork, (fork((writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt))))endFork
(await(cnt)
(print(100);
(countDown(cnt)
print(100);))))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = []
fileTable = {}
heapTable = {1=2, 2=3, 3=4}
latchTable = {1=3}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [writeHeap(v1, readHeap(v1) * 10);, (print(readHeap(v1));
countDown(cnt))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = []
fileTable = {}
heapTable = {1=2, 2=3, 3=4}
latchTable = {1=3}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [(fork((writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt))))endFork
(await(cnt)
(print(100);
(countDown(cnt)
print(100);))))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = []
fileTable = {}
heapTable = {1=20, 2=3, 3=4}
latchTable = {1=3}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [(print(readHeap(v1));
countDown(cnt))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = []
fileTable = {}
heapTable = {1=20, 2=3, 3=4}
latchTable = {1=3}
-------------------------------------




-------------------------------------
ProgramState ID 3:
executionStack = [(writeHeap(v2, readHeap(v2) * 10);
(print(readHeap(v2));
countDown(cnt)))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = []
fileTable = {}
heapTable = {1=20, 2=3, 3=4}
latchTable = {1=3}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [fork((writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt))))endFork, (await(cnt)
(print(100);
(countDown(cnt)
print(100);)))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = []
fileTable = {}
heapTable = {1=20, 2=3, 3=4}
latchTable = {1=3}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [print(readHeap(v1));, countDown(cnt)]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = []
fileTable = {}
heapTable = {1=20, 2=3, 3=4}
latchTable = {1=3}
-------------------------------------




-------------------------------------
ProgramState ID 3:
executionStack = [writeHeap(v2, readHeap(v2) * 10);, (print(readHeap(v2));
countDown(cnt))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = []
fileTable = {}
heapTable = {1=20, 2=3, 3=4}
latchTable = {1=3}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [(await(cnt)
(print(100);
(countDown(cnt)
print(100);)))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20]
fileTable = {}
heapTable = {1=20, 2=30, 3=4}
latchTable = {1=3}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [countDown(cnt)]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20]
fileTable = {}
heapTable = {1=20, 2=30, 3=4}
latchTable = {1=3}
-------------------------------------




-------------------------------------
ProgramState ID 3:
executionStack = [(print(readHeap(v2));
countDown(cnt))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20]
fileTable = {}
heapTable = {1=20, 2=30, 3=4}
latchTable = {1=3}
-------------------------------------




-------------------------------------
ProgramState ID 4:
executionStack = [(writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt)))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20]
fileTable = {}
heapTable = {1=20, 2=30, 3=4}
latchTable = {1=3}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [await(cnt), (print(100);
(countDown(cnt)
print(100);))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 2]
fileTable = {}
heapTable = {1=20, 2=30, 3=4}
latchTable = {1=2}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = []
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 2]
fileTable = {}
heapTable = {1=20, 2=30, 3=4}
latchTable = {1=2}
-------------------------------------




-------------------------------------
ProgramState ID 3:
executionStack = [print(readHeap(v2));, countDown(cnt)]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 2]
fileTable = {}
heapTable = {1=20, 2=30, 3=4}
latchTable = {1=2}
-------------------------------------




-------------------------------------
ProgramState ID 4:
executionStack = [writeHeap(v3, readHeap(v3) * 10);, (print(readHeap(v3));
countDown(cnt))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 2]
fileTable = {}
heapTable = {1=20, 2=30, 3=4}
latchTable = {1=2}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [await(cnt), (print(100);
(countDown(cnt)
print(100);))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 2, 30]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=2}
-------------------------------------




-------------------------------------
ProgramState ID 3:
executionStack = [countDown(cnt)]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 2, 30]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=2}
-------------------------------------




-------------------------------------
ProgramState ID 4:
executionStack = [(print(readHeap(v3));
countDown(cnt))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 2, 30]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=2}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [await(cnt), (print(100);
(countDown(cnt)
print(100);))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 2, 30, 3]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=1}
-------------------------------------




-------------------------------------
ProgramState ID 3:
executionStack = []
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 2, 30, 3]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=1}
-------------------------------------




-------------------------------------
ProgramState ID 4:
executionStack = [print(readHeap(v3));, countDown(cnt)]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 2, 30, 3]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=1}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [await(cnt), (print(100);
(countDown(cnt)
print(100);))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 2, 30, 3, 40]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=1}
-------------------------------------




-------------------------------------
ProgramState ID 4:
executionStack = [countDown(cnt)]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 2, 30, 3, 40]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=1}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [await(cnt), (print(100);
(countDown(cnt)
print(100);))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 2, 30, 3, 40, 4]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=0}
-------------------------------------




-------------------------------------
ProgramState ID 4:
executionStack = []
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 2, 30, 3, 40, 4]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=0}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [(print(100);
(countDown(cnt)
print(100);))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 2, 30, 3, 40, 4]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=0}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [print(100);, (countDown(cnt)
print(100);)]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 2, 30, 3, 40, 4]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=0}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [(countDown(cnt)
print(100);)]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 2, 30, 3, 40, 4, 100]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=0}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [countDown(cnt), print(100);]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 2, 30, 3, 40, 4, 100]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=0}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [print(100);]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 2, 30, 3, 40, 4, 100, 1]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=0}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = []
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 2, 30, 3, 40, 4, 100, 1, 100]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=0}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [Ref int a;, (Ref int b;
(int v;
(new(a, 0);
(new(b, 0);
(writeHeap(a, 1);
(writeHeap(b, 2);
(v = readHeap(a) < readHeap(b)?100:200
(print(v);
(v = readHeap(b) - 2 > readHeap(a)?100:200
print(v);)))))))))]
symbolTable = {}
outputList = []
fileTable = {}
heapTable = {}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [(Ref int b;
(int v;
(new(a, 0);
(new(b, 0);
(writeHeap(a, 1);
(writeHeap(b, 2);
(v = readHeap(a) < readHeap(b)?100:200
(print(v);
(v = readHeap(b) - 2 > readHeap(a)?100:200
print(v);)))))))))]
symbolTable = {a=(Address: 0)=>int}
outputList = []
fileTable = {}
heapTable = {}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [Ref int b;, (int v;
(new(a, 0);
(new(b, 0);
(writeHeap(a, 1);
(writeHeap(b, 2);
(v = readHeap(a) < readHeap(b)?100:200
(print(v);
(v = readHeap(b) - 2 > readHeap(a)?100:200
print(v);))))))))]
symbolTable = {a=(Address: 0)=>int}
outputList = []
fileTable = {}
heapTable = {}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [(int v;
(new(a, 0);
(new(b, 0);
(writeHeap(a, 1);
(writeHeap(b, 2);
(v = readHeap(a) < readHeap(b)?100:200
(print(v);
(v = readHeap(b) - 2 > readHeap(a)?100:200
print(v);))))))))]
symbolTable = {a=(Address: 0)=>int, b=(Address: 0)=>int}
outputList = []
fileTable = {}
heapTable = {}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [int v;, (new(a, 0);
(new(b, 0);
(writeHeap(a, 1);
(writeHeap(b, 2);
(v = readHeap(a) < readHeap(b)?100:200
(print(v);
(v = readHeap(b) - 2 > readHeap(a)?100:200
print(v);)))))))]
symbolTable = {a=(Address: 0)=>int, b=(Address: 0)=>int}
outputList = []
fileTable = {}
heapTable = {}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [(new(a, 0);
(new(b, 0);
(writeHeap(a, 1);
(writeHeap(b, 2);
(v = readHeap(a) < readHeap(b)?100:200
(print(v);
(v = readHeap(b) - 2 > readHeap(a)?100:200
print(v);)))))))]
symbolTable = {a=(Address: 0)=>int, b=(Address: 0)=>int, v=0}
outputList = []
fileTable = {}
heapTable = {}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [new(a, 0);, (new(b, 0);
(writeHeap(a, 1);
(writeHeap(b, 2);
(v = readHeap(a) < readHeap(b)?100:200
(print(v);
(v = readHeap(b) - 2 > readHeap(a)?100:200
print(v);))))))]
symbolTable = {a=(Address: 0)=>int, b=(Address: 0)=>int, v=0}
outputList = []
fileTable = {}
heapTable = {}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [(new(b, 0);
(writeHeap(a, 1);
(writeHeap(b, 2);
(v = readHeap(a) < readHeap(b)?100:200
(print(v);
(v = readHeap(b) - 2 > readHeap(a)?100:200
print(v);))))))]
symbolTable = {a=(Address: 1)=>int, b=(Address: 0)=>int, v=0}
outputList = []
fileTable = {}
heapTable = {1=0}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [new(b, 0);, (writeHeap(a, 1);
(writeHeap(b, 2);
(v = readHeap(a) < readHeap(b)?100:200
(print(v);
(v = readHeap(b) - 2 > readHeap(a)?100:200
print(v);)))))]
symbolTable = {a=(Address: 1)=>int, b=(Address: 0)=>int, v=0}
outputList = []
fileTable = {}
heapTable = {1=0}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [(writeHeap(a, 1);
(writeHeap(b, 2);
(v = readHeap(a) < readHeap(b)?100:200
(print(v);
(v = readHeap(b) - 2 > readHeap(a)?100:200
print(v);)))))]
symbolTable = {a=(Address: 1)=>int, b=(Address: 2)=>int, v=0}
outputList = []
fileTable = {}
heapTable = {1=0, 2=0}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [writeHeap(a, 1);, (writeHeap(b, 2);
(v = readHeap(a) < readHeap(b)?100:200
(print(v);
(v = readHeap(b) - 2 > readHeap(a)?100:200
print(v);))))]
symbolTable = {a=(Address: 1)=>int, b=(Address: 2)=>int, v=0}
outputList = []
fileTable = {}
heapTable = {1=0, 2=0}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [(writeHeap(b, 2);
(v = readHeap(a) < readHeap(b)?100:200
(print(v);
(v = readHeap(b) - 2 > readHeap(a)?100:200
print(v);))))]
symbolTable = {a=(Address: 1)=>int, b=(Address: 2)=>int, v=0}
outputList = []
fileTable = {}
heapTable = {1=1, 2=0}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [writeHeap(b, 2);, (v = readHeap(a) < readHeap(b)?100:200
(print(v);
(v = readHeap(b) - 2 > readHeap(a)?100:200
print(v);)))]
symbolTable = {a=(Address: 1)=>int, b=(Address: 2)=>int, v=0}
outputList = []
fileTable = {}
heapTable = {1=1, 2=0}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [(v = readHeap(a) < readHeap(b)?100:200
(print(v);
(v = readHeap(b) - 2 > readHeap(a)?100:200
print(v);)))]
symbolTable = {a=(Address: 1)=>int, b=(Address: 2)=>int, v=0}
outputList = []
fileTable = {}
heapTable = {1=1, 2=2}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [v = readHeap(a) < readHeap(b)?100:200, (print(v);
(v = readHeap(b) - 2 > readHeap(a)?100:200
print(v);))]
symbolTable = {a=(Address: 1)=>int, b=(Address: 2)=>int, v=0}
outputList = []
fileTable = {}
heapTable = {1=1, 2=2}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [(print(v);
(v = readHeap(b) - 2 > readHeap(a)?100:200
print(v);))]
symbolTable = {a=(Address: 1)=>int, b=(Address: 2)=>int, v=100}
outputList = []
fileTable = {}
heapTable = {1=1, 2=2}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [print(v);, (v = readHeap(b) - 2 > readHeap(a)?100:200
print(v);)]
symbolTable = {a=(Address: 1)=>int, b=(Address: 2)=>int, v=100}
outputList = []
fileTable = {}
heapTable = {1=1, 2=2}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [(v = readHeap(b) - 2 > readHeap(a)?100:200
print(v);)]
symbolTable = {a=(Address: 1)=>int, b=(Address: 2)=>int, v=100}
outputList = [100]
fileTable = {}
heapTable = {1=1, 2=2}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [v = readHeap(b) - 2 > readHeap(a)?100:200, print(v);]
symbolTable = {a=(Address: 1)=>int, b=(Address: 2)=>int, v=100}
outputList = [100]
fileTable = {}
heapTable = {1=1, 2=2}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = [print(v);]
symbolTable = {a=(Address: 1)=>int, b=(Address: 2)=>int, v=200}
outputList = [100]
fileTable = {}
heapTable = {1=1, 2=2}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 1:
executionStack = []
symbolTable = {a=(Address: 1)=>int, b=(Address: 2)=>int, v=200}
outputList = [100, 200]
fileTable = {}
heapTable = {1=1, 2=2}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [Ref int v1;, (Ref int v2;
(Ref int v3;
(int cnt;
(new(v1, 2);
(new(v2, 3);
(new(v3, 4);
(newLatch(cnt, readHeap(v2))
(fork((writeHeap(v1, readHeap(v1) * 10);
(print(readHeap(v1));
countDown(cnt))))endFork
(fork((writeHeap(v2, readHeap(v2) * 10);
(print(readHeap(v2));
countDown(cnt))))endFork
(fork((writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt))))endFork
(await(cnt)
(print(100);
(countDown(cnt)
print(100);)))))))))))))]
symbolTable = {}
outputList = []
fileTable = {}
heapTable = {}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [(Ref int v2;
(Ref int v3;
(int cnt;
(new(v1, 2);
(new(v2, 3);
(new(v3, 4);
(newLatch(cnt, readHeap(v2))
(fork((writeHeap(v1, readHeap(v1) * 10);
(print(readHeap(v1));
countDown(cnt))))endFork
(fork((writeHeap(v2, readHeap(v2) * 10);
(print(readHeap(v2));
countDown(cnt))))endFork
(fork((writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt))))endFork
(await(cnt)
(print(100);
(countDown(cnt)
print(100);)))))))))))))]
symbolTable = {v1=(Address: 0)=>int}
outputList = []
fileTable = {}
heapTable = {}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [Ref int v2;, (Ref int v3;
(int cnt;
(new(v1, 2);
(new(v2, 3);
(new(v3, 4);
(newLatch(cnt, readHeap(v2))
(fork((writeHeap(v1, readHeap(v1) * 10);
(print(readHeap(v1));
countDown(cnt))))endFork
(fork((writeHeap(v2, readHeap(v2) * 10);
(print(readHeap(v2));
countDown(cnt))))endFork
(fork((writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt))))endFork
(await(cnt)
(print(100);
(countDown(cnt)
print(100);))))))))))))]
symbolTable = {v1=(Address: 0)=>int}
outputList = []
fileTable = {}
heapTable = {}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [(Ref int v3;
(int cnt;
(new(v1, 2);
(new(v2, 3);
(new(v3, 4);
(newLatch(cnt, readHeap(v2))
(fork((writeHeap(v1, readHeap(v1) * 10);
(print(readHeap(v1));
countDown(cnt))))endFork
(fork((writeHeap(v2, readHeap(v2) * 10);
(print(readHeap(v2));
countDown(cnt))))endFork
(fork((writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt))))endFork
(await(cnt)
(print(100);
(countDown(cnt)
print(100);))))))))))))]
symbolTable = {v1=(Address: 0)=>int, v2=(Address: 0)=>int}
outputList = []
fileTable = {}
heapTable = {}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [Ref int v3;, (int cnt;
(new(v1, 2);
(new(v2, 3);
(new(v3, 4);
(newLatch(cnt, readHeap(v2))
(fork((writeHeap(v1, readHeap(v1) * 10);
(print(readHeap(v1));
countDown(cnt))))endFork
(fork((writeHeap(v2, readHeap(v2) * 10);
(print(readHeap(v2));
countDown(cnt))))endFork
(fork((writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt))))endFork
(await(cnt)
(print(100);
(countDown(cnt)
print(100);)))))))))))]
symbolTable = {v1=(Address: 0)=>int, v2=(Address: 0)=>int}
outputList = []
fileTable = {}
heapTable = {}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [(int cnt;
(new(v1, 2);
(new(v2, 3);
(new(v3, 4);
(newLatch(cnt, readHeap(v2))
(fork((writeHeap(v1, readHeap(v1) * 10);
(print(readHeap(v1));
countDown(cnt))))endFork
(fork((writeHeap(v2, readHeap(v2) * 10);
(print(readHeap(v2));
countDown(cnt))))endFork
(fork((writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt))))endFork
(await(cnt)
(print(100);
(countDown(cnt)
print(100);)))))))))))]
symbolTable = {v1=(Address: 0)=>int, v2=(Address: 0)=>int, v3=(Address: 0)=>int}
outputList = []
fileTable = {}
heapTable = {}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [int cnt;, (new(v1, 2);
(new(v2, 3);
(new(v3, 4);
(newLatch(cnt, readHeap(v2))
(fork((writeHeap(v1, readHeap(v1) * 10);
(print(readHeap(v1));
countDown(cnt))))endFork
(fork((writeHeap(v2, readHeap(v2) * 10);
(print(readHeap(v2));
countDown(cnt))))endFork
(fork((writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt))))endFork
(await(cnt)
(print(100);
(countDown(cnt)
print(100);))))))))))]
symbolTable = {v1=(Address: 0)=>int, v2=(Address: 0)=>int, v3=(Address: 0)=>int}
outputList = []
fileTable = {}
heapTable = {}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [(new(v1, 2);
(new(v2, 3);
(new(v3, 4);
(newLatch(cnt, readHeap(v2))
(fork((writeHeap(v1, readHeap(v1) * 10);
(print(readHeap(v1));
countDown(cnt))))endFork
(fork((writeHeap(v2, readHeap(v2) * 10);
(print(readHeap(v2));
countDown(cnt))))endFork
(fork((writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt))))endFork
(await(cnt)
(print(100);
(countDown(cnt)
print(100);))))))))))]
symbolTable = {cnt=0, v1=(Address: 0)=>int, v2=(Address: 0)=>int, v3=(Address: 0)=>int}
outputList = []
fileTable = {}
heapTable = {}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [new(v1, 2);, (new(v2, 3);
(new(v3, 4);
(newLatch(cnt, readHeap(v2))
(fork((writeHeap(v1, readHeap(v1) * 10);
(print(readHeap(v1));
countDown(cnt))))endFork
(fork((writeHeap(v2, readHeap(v2) * 10);
(print(readHeap(v2));
countDown(cnt))))endFork
(fork((writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt))))endFork
(await(cnt)
(print(100);
(countDown(cnt)
print(100);)))))))))]
symbolTable = {cnt=0, v1=(Address: 0)=>int, v2=(Address: 0)=>int, v3=(Address: 0)=>int}
outputList = []
fileTable = {}
heapTable = {}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [(new(v2, 3);
(new(v3, 4);
(newLatch(cnt, readHeap(v2))
(fork((writeHeap(v1, readHeap(v1) * 10);
(print(readHeap(v1));
countDown(cnt))))endFork
(fork((writeHeap(v2, readHeap(v2) * 10);
(print(readHeap(v2));
countDown(cnt))))endFork
(fork((writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt))))endFork
(await(cnt)
(print(100);
(countDown(cnt)
print(100);)))))))))]
symbolTable = {cnt=0, v1=(Address: 1)=>int, v2=(Address: 0)=>int, v3=(Address: 0)=>int}
outputList = []
fileTable = {}
heapTable = {1=2}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [new(v2, 3);, (new(v3, 4);
(newLatch(cnt, readHeap(v2))
(fork((writeHeap(v1, readHeap(v1) * 10);
(print(readHeap(v1));
countDown(cnt))))endFork
(fork((writeHeap(v2, readHeap(v2) * 10);
(print(readHeap(v2));
countDown(cnt))))endFork
(fork((writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt))))endFork
(await(cnt)
(print(100);
(countDown(cnt)
print(100);))))))))]
symbolTable = {cnt=0, v1=(Address: 1)=>int, v2=(Address: 0)=>int, v3=(Address: 0)=>int}
outputList = []
fileTable = {}
heapTable = {1=2}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [(new(v3, 4);
(newLatch(cnt, readHeap(v2))
(fork((writeHeap(v1, readHeap(v1) * 10);
(print(readHeap(v1));
countDown(cnt))))endFork
(fork((writeHeap(v2, readHeap(v2) * 10);
(print(readHeap(v2));
countDown(cnt))))endFork
(fork((writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt))))endFork
(await(cnt)
(print(100);
(countDown(cnt)
print(100);))))))))]
symbolTable = {cnt=0, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 0)=>int}
outputList = []
fileTable = {}
heapTable = {1=2, 2=3}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [new(v3, 4);, (newLatch(cnt, readHeap(v2))
(fork((writeHeap(v1, readHeap(v1) * 10);
(print(readHeap(v1));
countDown(cnt))))endFork
(fork((writeHeap(v2, readHeap(v2) * 10);
(print(readHeap(v2));
countDown(cnt))))endFork
(fork((writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt))))endFork
(await(cnt)
(print(100);
(countDown(cnt)
print(100);)))))))]
symbolTable = {cnt=0, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 0)=>int}
outputList = []
fileTable = {}
heapTable = {1=2, 2=3}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [(newLatch(cnt, readHeap(v2))
(fork((writeHeap(v1, readHeap(v1) * 10);
(print(readHeap(v1));
countDown(cnt))))endFork
(fork((writeHeap(v2, readHeap(v2) * 10);
(print(readHeap(v2));
countDown(cnt))))endFork
(fork((writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt))))endFork
(await(cnt)
(print(100);
(countDown(cnt)
print(100);)))))))]
symbolTable = {cnt=0, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = []
fileTable = {}
heapTable = {1=2, 2=3, 3=4}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [newLatch(cnt, readHeap(v2)), (fork((writeHeap(v1, readHeap(v1) * 10);
(print(readHeap(v1));
countDown(cnt))))endFork
(fork((writeHeap(v2, readHeap(v2) * 10);
(print(readHeap(v2));
countDown(cnt))))endFork
(fork((writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt))))endFork
(await(cnt)
(print(100);
(countDown(cnt)
print(100);))))))]
symbolTable = {cnt=0, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = []
fileTable = {}
heapTable = {1=2, 2=3, 3=4}
latchTable = {}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [(fork((writeHeap(v1, readHeap(v1) * 10);
(print(readHeap(v1));
countDown(cnt))))endFork
(fork((writeHeap(v2, readHeap(v2) * 10);
(print(readHeap(v2));
countDown(cnt))))endFork
(fork((writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt))))endFork
(await(cnt)
(print(100);
(countDown(cnt)
print(100);))))))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = []
fileTable = {}
heapTable = {1=2, 2=3, 3=4}
latchTable = {1=3}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [fork((writeHeap(v1, readHeap(v1) * 10);
(print(readHeap(v1));
countDown(cnt))))endFork, (fork((writeHeap(v2, readHeap(v2) * 10);
(print(readHeap(v2));
countDown(cnt))))endFork
(fork((writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt))))endFork
(await(cnt)
(print(100);
(countDown(cnt)
print(100);)))))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = []
fileTable = {}
heapTable = {1=2, 2=3, 3=4}
latchTable = {1=3}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [(fork((writeHeap(v2, readHeap(v2) * 10);
(print(readHeap(v2));
countDown(cnt))))endFork
(fork((writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt))))endFork
(await(cnt)
(print(100);
(countDown(cnt)
print(100);)))))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = []
fileTable = {}
heapTable = {1=2, 2=3, 3=4}
latchTable = {1=3}
-------------------------------------




-------------------------------------
ProgramState ID 3:
executionStack = [(writeHeap(v1, readHeap(v1) * 10);
(print(readHeap(v1));
countDown(cnt)))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = []
fileTable = {}
heapTable = {1=2, 2=3, 3=4}
latchTable = {1=3}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [fork((writeHeap(v2, readHeap(v2) * 10);
(print(readHeap(v2));
countDown(cnt))))endFork, (fork((writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt))))endFork
(await(cnt)
(print(100);
(countDown(cnt)
print(100);))))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = []
fileTable = {}
heapTable = {1=2, 2=3, 3=4}
latchTable = {1=3}
-------------------------------------




-------------------------------------
ProgramState ID 3:
executionStack = [writeHeap(v1, readHeap(v1) * 10);, (print(readHeap(v1));
countDown(cnt))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = []
fileTable = {}
heapTable = {1=2, 2=3, 3=4}
latchTable = {1=3}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [(fork((writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt))))endFork
(await(cnt)
(print(100);
(countDown(cnt)
print(100);))))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = []
fileTable = {}
heapTable = {1=20, 2=3, 3=4}
latchTable = {1=3}
-------------------------------------




-------------------------------------
ProgramState ID 3:
executionStack = [(print(readHeap(v1));
countDown(cnt))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = []
fileTable = {}
heapTable = {1=20, 2=3, 3=4}
latchTable = {1=3}
-------------------------------------




-------------------------------------
ProgramState ID 4:
executionStack = [(writeHeap(v2, readHeap(v2) * 10);
(print(readHeap(v2));
countDown(cnt)))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = []
fileTable = {}
heapTable = {1=20, 2=3, 3=4}
latchTable = {1=3}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [fork((writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt))))endFork, (await(cnt)
(print(100);
(countDown(cnt)
print(100);)))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = []
fileTable = {}
heapTable = {1=20, 2=3, 3=4}
latchTable = {1=3}
-------------------------------------




-------------------------------------
ProgramState ID 3:
executionStack = [print(readHeap(v1));, countDown(cnt)]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = []
fileTable = {}
heapTable = {1=20, 2=3, 3=4}
latchTable = {1=3}
-------------------------------------




-------------------------------------
ProgramState ID 4:
executionStack = [writeHeap(v2, readHeap(v2) * 10);, (print(readHeap(v2));
countDown(cnt))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = []
fileTable = {}
heapTable = {1=20, 2=3, 3=4}
latchTable = {1=3}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [(await(cnt)
(print(100);
(countDown(cnt)
print(100);)))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20]
fileTable = {}
heapTable = {1=20, 2=30, 3=4}
latchTable = {1=3}
-------------------------------------




-------------------------------------
ProgramState ID 3:
executionStack = [countDown(cnt)]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20]
fileTable = {}
heapTable = {1=20, 2=30, 3=4}
latchTable = {1=3}
-------------------------------------




-------------------------------------
ProgramState ID 4:
executionStack = [(print(readHeap(v2));
countDown(cnt))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20]
fileTable = {}
heapTable = {1=20, 2=30, 3=4}
latchTable = {1=3}
-------------------------------------




-------------------------------------
ProgramState ID 5:
executionStack = [(writeHeap(v3, readHeap(v3) * 10);
(print(readHeap(v3));
countDown(cnt)))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20]
fileTable = {}
heapTable = {1=20, 2=30, 3=4}
latchTable = {1=3}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [await(cnt), (print(100);
(countDown(cnt)
print(100);))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 3]
fileTable = {}
heapTable = {1=20, 2=30, 3=4}
latchTable = {1=2}
-------------------------------------




-------------------------------------
ProgramState ID 3:
executionStack = []
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 3]
fileTable = {}
heapTable = {1=20, 2=30, 3=4}
latchTable = {1=2}
-------------------------------------




-------------------------------------
ProgramState ID 4:
executionStack = [print(readHeap(v2));, countDown(cnt)]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 3]
fileTable = {}
heapTable = {1=20, 2=30, 3=4}
latchTable = {1=2}
-------------------------------------




-------------------------------------
ProgramState ID 5:
executionStack = [writeHeap(v3, readHeap(v3) * 10);, (print(readHeap(v3));
countDown(cnt))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 3]
fileTable = {}
heapTable = {1=20, 2=30, 3=4}
latchTable = {1=2}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [await(cnt), (print(100);
(countDown(cnt)
print(100);))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 3, 30]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=2}
-------------------------------------




-------------------------------------
ProgramState ID 4:
executionStack = [countDown(cnt)]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 3, 30]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=2}
-------------------------------------




-------------------------------------
ProgramState ID 5:
executionStack = [(print(readHeap(v3));
countDown(cnt))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 3, 30]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=2}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [await(cnt), (print(100);
(countDown(cnt)
print(100);))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 3, 30, 4]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=1}
-------------------------------------




-------------------------------------
ProgramState ID 4:
executionStack = []
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 3, 30, 4]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=1}
-------------------------------------




-------------------------------------
ProgramState ID 5:
executionStack = [print(readHeap(v3));, countDown(cnt)]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 3, 30, 4]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=1}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [await(cnt), (print(100);
(countDown(cnt)
print(100);))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 3, 30, 4, 40]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=1}
-------------------------------------




-------------------------------------
ProgramState ID 5:
executionStack = [countDown(cnt)]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 3, 30, 4, 40]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=1}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [await(cnt), (print(100);
(countDown(cnt)
print(100);))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 3, 30, 4, 40, 5]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=0}
-------------------------------------




-------------------------------------
ProgramState ID 5:
executionStack = []
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 3, 30, 4, 40, 5]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=0}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [(print(100);
(countDown(cnt)
print(100);))]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 3, 30, 4, 40, 5]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=0}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [print(100);, (countDown(cnt)
print(100);)]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 3, 30, 4, 40, 5]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=0}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [(countDown(cnt)
print(100);)]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 3, 30, 4, 40, 5, 100]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=0}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [countDown(cnt), print(100);]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 3, 30, 4, 40, 5, 100]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=0}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = [print(100);]
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 3, 30, 4, 40, 5, 100, 2]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=0}
-------------------------------------




-------------------------------------
ProgramState ID 2:
executionStack = []
symbolTable = {cnt=1, v1=(Address: 1)=>int, v2=(Address: 2)=>int, v3=(Address: 3)=>int}
outputList = [20, 3, 30, 4, 40, 5, 100, 2, 100]
fileTable = {}
heapTable = {1=20, 2=30, 3=40}
latchTable = {1=0}
-------------------------------------



